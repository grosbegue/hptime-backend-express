{"version":3,"sources":["components/Navigation.js","components/SpeedDial.js","components/IsEmergency.js","components/MapMarker.js","components/UserMarker.js","components/PopUp.js","components/SingleMap.js","components/FilterBar.js","components/StructureDetail.js","api.js","components/MapWrapper.js","components/NotFound.js","components/SpecialtyCard.js","components/PathologyQuestions.js","components/AdultQuestion.js","components/QuestionsIndicator.js","components/LocationSearchInput.js","components/UserLocalisation.js","components/Questions.js","components/SignUpPage.js","components/LoginPage.js","components/GeolocationCoodinates.js","components/Structuredetails.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","_this","this","react_default","a","createElement","Container_default","Navbar_default","bg","variant","expand","fixed","collapseOnSelect","lib","to","Brand","Toggle","aria-controls","Collapse","id","Nav_default","className","props","currentUser","Fragment","Link","onClick","logoutClick","Component","Section","posed","section","open","transition","ease","duration","y","opacity","x","closed","SpeedDial","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","_this2","setTimeout","setState","isVisible","pose","href","aria-hidden","delayChildren","staggerChildren","delay","Div","div","H1","h1","P","p","Footer","footer","ButtonWrap","IsEmergency","context","show","handleShow","bind","assertThisInitialized","handleClose","IsEmergency_Section","src","alt","Button_default","size","src_components_SpeedDial","Modal_default","centered","onHide","Header","Title","data-toggle","Body","PureComponent","ICON","hospitalUnfiltered","cursor","fill","stroke","hospitalFiltered","structureUnfiltered","structureFiltered","MapMarker","isHospital","oneItem","group","isFiltered","filtered","version","viewBox","enableBackground","height","style","objectSpread","transform","concat","d","UserMarker","PopUp","popupInfo","esm","longitude","latitude","closeOnClick","anchor","onClose","onCloseClick","name","phoneNumber","streetNumber","roadType","streetName","zipCode","city","urlToPlan","SingleMap","renderMapAndMarkers","structureArray","map","index","key","components_MapMarker","clearPopup","_onViewportChange","viewport","renderPopup","src_components_PopUp","renderUserMarker","location","src_components_UserMarker","_goToViewport","_ref","zoom","pitch","bearing","transitionInterpolator","FlyToInterpolator","transitionDuration","hospitalArray","altStructure","newstructureArray","userLocation","assign","mapboxApiAccessToken","process","mapStyle","width","window","innerWidth","innerHeight","onViewportChange","FilterBar","event","updatePatient","Form_default","Control","onChange","clickHandler","as","value","StructureDetail","structureItem","console","log","emptyOneStructure","Col_default","sm","span","Card_default","Subtitle","type","MAPBOX_KEY","backendApi","axios","create","baseURL","withCredentials","errorHandler","err","response","data","alert","getAtlStructuresbyLocation","latt","long","get","MapWrapper","setRedirect","redirect","renderRedirect","Redirect","showStructureDetail","oneStructureDetail","isStructureOpen","openingHours","updateStructure","prevProps","neededSpecialist","all","then","spread","responseHos","responseAlt","_this2$props","patientType","i","tenFirstaltStructure","slice","filteredHospiatls","filter","el","availablePoles","some","pole","pathology","mapboxArray","oneStructure","userLong","userLatt","Math","round","durations","hourOfDay","Date","getHours","waitingTimePerHour","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","waitingTimeAccordingToHour","sort","b","catch","Swal","fire","position","title","showConfirmButton","timer","isSubmitSuccessful","_this3","_this$state","Row_default","order","md","components_StructureDetail","block","aria-expanded","components_FilterBar","Collapse_default","in","aria-labelledby","data-parent","shortname","components_SingleMap","NotFound","SpecialtyCard","nextStep","picture","bodyPart","role","infoText","Ul","ul","Li","li","PathologyQuestions","onFormStep","totalSteps","currentStep","oldProps","isActive","specialtyList","image","infoTitle","previousStep","xs","lg","oneSpecialty","src_components_SpecialtyCard","userChoice","AdultQuestion","AdultQuestion_Section","AdultQuestion_Div","AdultQuestion_P","AdultQuestion_ButtonWrap","Questions","dots","currentActiveDot","_this$props","numberOfSteps","Array","apply","length","dot","LocationSearchInput","currentUserPosition","addressInputValue","isLoadingCoordinates","toMapResults","validated","autocompleteInput","React","createRef","autocomplete","handlePlaceChanged","getUserLocationBrowser","handleChange","goToResult","southWest","google","maps","LatLng","northEast","ileDeFrance","LatLngBounds","places","Autocomplete","current","bounds","types","componentRestrictions","country","addListener","target","checked","defineProperty","place","getPlace","geometry","ga","l","ma","onGeolocation","currentTarget","checkValidity","preventDefault","stopPropagation","toggleSearchCoordinates","navigator","geolocation","getCurrentPosition","reverseGeocode","coords","error","currentValue","params","latlng","results","formatted_address","_this4","noValidate","onSubmit","e","handleSubmit","FormControl_default","placeholder","ref","required","Label","label","DivSearchInput","UserLocalisation","UserLocalisation_Section","UserLocalisation_Div","UserLocalisation_P","src_components_LocationSearchInput","Check","components_QuestionsIndicator","react_step_wizard_min_default","onStepChange","handleStep","initialStep","src_components_AdultQuestion","hashKey","updateFormIndicator","components_PathologyQuestions","src_components_UserLocalisation","SignupPage","username","password","_event$target","userSubmission","post","signupSuccess","class","genericOnChange","email","selected","s","LoginPage","loginCredentials","loginSuccess","es_Redirect","classame","aria-describedby","Demo","isGeolocationAvailable","isGeolocationEnabled","altitude","heading","speed","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Structuredetails","times","match","structureId","n","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","Text","Dashboard","hospitalItems","cellSpacing","oneHospital","managerEntity","data-placement","data-title","data-target","require","config","App","userInfo","localStorage","getItem","JSON","parse","patientGender","patientAdult","beforeChildren","patientLocation","newUser","setItem","stringify","removeItem","updateUser","components_Navigation","Switch","Route","path","component","exact","render","src_components_IsEmergency","src_components_MapWrapper","GeolocationPoint","components_Questions","updatePatientPosition","components_SignUpPage","user","src_components_LoginPage","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"wqBA0DeA,mLAnDJ,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,GAAG,QACHC,QAAQ,QACRC,OAAO,KACPC,MAAM,MACNC,iBAAiB,QAEjBT,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,KAChBX,EAAAC,EAAAC,cAACE,EAAAH,EAAOW,MAAR,KACG,IADH,MAEKZ,EAAAC,EAAAC,cAAA,qBAGPF,EAAAC,EAAAC,cAACE,EAAAH,EAAOY,OAAR,CAAeC,gBAAc,0BAC7Bd,EAAAC,EAAAC,cAACE,EAAAH,EAAOc,SAAR,CAAiBC,GAAG,yBAClBhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAKiB,UAAU,WACZnB,KAAKoB,MAAMC,YACVpB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACErB,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,QAChBX,EAAAC,EAAAC,cAACe,EAAAhB,EAAIqB,KAAL,aAEFtB,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,cAChBX,EAAAC,EAAAC,cAACe,EAAAhB,EAAIqB,KAAL,mBAEFtB,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,WAChBX,EAAAC,EAAAC,cAACe,EAAAhB,EAAIqB,KAAL,CAAUC,QAAS,kBAAMzB,EAAKqB,MAAMK,gBAApC,aAMJxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACErB,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,WAChBX,EAAAC,EAAAC,cAACe,EAAAhB,EAAIqB,KAAL,uBAEFtB,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,UAChBX,EAAAC,EAAAC,cAACe,EAAAhB,EAAIqB,KAAL,kCAxCKG,uECFnBC,UAAUC,IAAMC,QAAQ,CAC5BC,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,GACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,MA6BlBE,cAzBb,SAAAA,EAAYlB,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAsC,IACjBvC,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA3C,KAAMoB,KACDwB,MAAQ,CAAEC,QAAQ,GAFN9C,mFAIC,IAAA+C,EAAA9C,KAClB+C,WAAW,WACTD,EAAKE,SAAS,CACZH,QAASC,EAAKF,MAAMK,aAErB,oCAGI,IACCJ,EAAW7C,KAAK4C,MAAhBC,OAER,OACE5C,EAAAC,EAAAC,cAACwB,EAAD,CAASuB,KAAML,EAAS,OAAS,UAC/B5C,EAAAC,EAAAC,cAAA,KAAGgD,KAAK,SAAShC,UAAU,6CACzBlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,6BAA6BiC,cAAY,SAAU,IAChEnD,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,aAAhB,eApBcO,aCLlBC,EAAUC,IAAMC,QAAQ,CAC5BC,KAAM,CACJC,WAAY,CAAEC,KAAM,YAAaC,SAAU,MAC3CG,EAAG,EACHiB,cAAe,EACfC,gBAAiB,IACjBnB,QAAS,EACToB,MAAO,GAETlB,OAAQ,CACND,EAAG,GACHmB,MAAO,EACPpB,QAAS,KAIPqB,EAAM5B,IAAM6B,IAAI,CACpB3B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,MACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,MAG3BsB,EAAK9B,IAAM+B,GAAG,CAClB7B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,MAG3BwB,EAAIhC,IAAMiC,EAAE,CAChB/B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,KAG3B0B,EAASlC,IAAMmC,OAAO,CAC1BjC,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,MAG3B4B,EAAapC,IAAM6B,IAAI,CAC3B3B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,MACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,OA4JlB6B,cAxJb,SAAAA,EAAY7C,EAAO8C,GAAS,IAAAnE,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAiE,IAC1BlE,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAA0B,GAAAtB,KAAA3C,KAAMoB,EAAO8C,KACRtB,MAAQ,CACXuB,MAAM,EACNrC,MAAM,GAER/B,EAAKqE,WAAarE,EAAKqE,WAAWC,KAAhB9B,OAAA+B,EAAA,EAAA/B,CAAAxC,IAClBA,EAAKwE,YAAcxE,EAAKwE,YAAYF,KAAjB9B,OAAA+B,EAAA,EAAA/B,CAAAxC,IAPOA,6EAY1BC,KAAKgD,SAAS,CAAEmB,MAAM,yCAItBnE,KAAKgD,SAAS,CAAEmB,MAAM,gDAGtBnE,KAAKgD,SAAS,CAAEH,QAAQ,qCAEjB,IACCA,EAAW7C,KAAK4C,MAAhBC,OACR,OACE5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACErB,EAAAC,EAAAC,cAACqE,EAAD,CAAStB,KAAML,EAAS,OAAS,SAAU1B,UAAU,YACnDlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,aACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OAEblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,gDACblB,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAAA,OACEsE,IAAI,qCACJC,IAAI,mEACJvD,UAAU,gBAKhBlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,2BACblB,EAAAC,EAAAC,cAACuD,EAAD,CAAIvC,UAAU,yDACZlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,iCAAhB,OACAlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gCAAhB,WAGFlB,EAAAC,EAAAC,cAACuD,EAAD,CAAIvC,UAAU,+DACZlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,iCAAhB,OACAlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,gCAAhB,WAEFlB,EAAAC,EAAAC,cAACyD,EAAD,CAAGzC,UAAU,aAAb,4FAIAlB,EAAAC,EAAAC,cAACyD,EAAD,CAAGzC,UAAU,0CAAb,sHAIAlB,EAAAC,EAAAC,cAAC6D,EAAD,KACE/D,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,UACRqE,KAAK,KACLzD,UAAU,OACVK,QAASxB,KAAKoE,YAJhB,iBAYRnE,EAAAC,EAAAC,cAAC2D,EAAD,CAAQ3C,UAAU,YAChBlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,aACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,WACblB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,wCAAb,oFAQRlB,EAAAC,EAAAC,cAAC0E,EAAD,MAEA5E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAO6E,UAAQ,EAACZ,KAAMnE,KAAK4C,MAAMuB,KAAMa,OAAQhF,KAAKuE,aAClDtE,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAM+E,OAAP,KACEhF,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAMgF,MAAP,CAAajE,GAAG,iCACdhB,EAAAC,EAAAC,cAAA,KACEgD,KAAK,YACLhC,UAAU,mBACVgE,cAAY,YAEX,IALH,mBAMkBlF,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,wBAE/BlB,EAAAC,EAAAC,cAAA,OAAKc,GAAG,WAAWE,UAAU,YAC3BlB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAd,6BAGAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAd,oIAKAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAd,4EAIAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAd,0FAIAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAd,2BAGAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAd,4CAGAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAd,+CAQRlB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAMkF,KAAP,KACEnF,EAAAC,EAAAC,cAAA,oGAEuBF,EAAAC,EAAAC,cAAA,qCAIzBF,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAM4D,OAAP,KACE7D,EAAAC,EAAAC,cAAA,KAAGgD,KAAK,UACNlD,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQK,QAAQ,UACdN,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,iBADf,2BAKFlB,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,SAChBX,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQK,QAAQ,WACdN,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,uBADf,yBA9IYkE,kDCzEpBC,EAAI,0QAIJC,EAAqB,CACzBC,OAAQ,UAERC,KAAM,WACNC,OAAQ,OACRvD,QAAS,GACTyC,KAAM,IAGFe,EAAmB,CACvBH,OAAQ,UACRC,KAAM,UACNC,OAAQ,OACRvD,QAAS,EACTyC,KAAM,IAGFgB,EAAsB,CAC1BJ,OAAQ,UAERC,KAAM,UACNC,OAAQ,OACRvD,QAAS,GACTyC,KAAM,IAGFiB,EAAoB,CACxBL,OAAQ,UAERC,KAAM,UACNC,OAAQ,OACRvD,QAAS,EACTyC,KAAM,IA6GOkB,mLAzGJ,IACCtE,EAAYxB,KAAKoB,MAAjBI,QACFuE,EAAa/F,KAAKoB,MAAM4E,QAAQC,MAEhCC,EAAalG,KAAKoB,MAAM4E,QAAQG,SAItC,OAAIJ,GAAcG,EAEdjG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEiG,QAAQ,MACRnF,GAAG,WACHmB,EAAE,MACFF,EAAE,MACFmE,QAAQ,cACRC,iBAAiB,kBACjBC,OAAQZ,EAAiBf,KACzB4B,MAAKjE,OAAAkE,EAAA,EAAAlE,CAAA,GACAoD,EADA,CAEHe,UAAS,aAAAC,QAAgBhB,EAAiBf,KACxC,EADO,OAAA+B,QACChB,EAAiBf,KADlB,SAGXpD,QAASA,GAETvB,EAAAC,EAAAC,cAAA,QACEyG,EAAE,sMAONb,IAAeG,EAEfjG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEoG,OAAQhB,EAAmBX,KAC3ByB,QAAQ,YACRG,MAAKjE,OAAAkE,EAAA,EAAAlE,CAAA,GACAgD,EADA,CAEHmB,UAAS,aAAAC,QAAgBpB,EAAmBX,KAC1C,EADO,OAAA+B,QACCpB,EAAmBX,KADpB,SAGXpD,QAASA,GAETvB,EAAAC,EAAAC,cAAA,QAAMyG,EAAGtB,OAKVS,GAAcG,EAEfjG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEiG,QAAQ,MACRnF,GAAG,WACHmB,EAAE,MACFF,EAAE,MACFmE,QAAQ,cACRC,iBAAiB,kBACjBC,OAAQV,EAAkBjB,KAC1B4B,MAAKjE,OAAAkE,EAAA,EAAAlE,CAAA,GACAsD,EADA,CAEHa,UAAS,aAAAC,QAAgBd,EAAkBjB,KACzC,EADO,OAAA+B,QACCd,EAAkBjB,KADnB,SAGXpD,QAASA,GAETvB,EAAAC,EAAAC,cAAA,QACEyG,EAAE,4xBAaR3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEoG,OAAQX,EAAoBhB,KAC5ByB,QAAQ,YACRG,MAAKjE,OAAAkE,EAAA,EAAAlE,CAAA,GACAqD,EADA,CAEHc,UAAS,aAAAC,QAAgBf,EAAoBhB,KAC3C,EADO,OAAA+B,QACCf,EAAoBhB,KADrB,SAGXpD,QAASA,GAETvB,EAAAC,EAAAC,cAAA,QAAMyG,EAAGtB,aAhGDD,iBCnBTwB,2LAhBX,OACE5G,EAAAC,EAAAC,cAAA,OACEgB,UAAU,MACVqF,MAAO,CACLhB,OAAQ,UACRkB,UAAS,aAAAC,QANF,GAME,OAAAA,QANF,GAME,SAGX1G,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,eACflB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACflB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,kBAbEkE,kBCqDVyB,2LAnDJ,IACCC,EAAc/G,KAAKoB,MAAnB2F,UAER,OACE9G,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,QACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,aACblB,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACE7F,UAAU,QAEV8F,UAAWF,EAAUE,UACrBC,SAAUH,EAAUG,SAEpBC,cAAc,EACdC,OAAO,MACPC,QAASrH,KAAKoB,MAAMkG,cAEpBrH,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mBACV,IACDlB,EAAAC,EAAAC,cAAA,SAAI4G,EAAUQ,OAEhBtH,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mBACXlB,EAAAC,EAAAC,cAAA,KAAGgD,KAAK,kCACL4D,EAAUS,cAGfvH,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mBACV4F,EAAUU,aADb,IAC4BV,EAAUW,SAAU,IAC7CX,EAAUY,WACX1H,EAAAC,EAAAC,cAAA,WACC4G,EAAUa,QAJb,IAIuBb,EAAUc,MAGjC5H,EAAAC,EAAAC,cAAA,KACEgD,KAAI,6BAAAwD,OAA+BI,EAAUG,SAAzC,KAAAP,OACFI,EAAUE,WAEZ9F,UAAU,mBAJZ,YASAlB,EAAAC,EAAAC,cAAA,KAAGgD,KAAI,GAAAwD,OAAKI,EAAUe,WAAa3G,UAAU,mBAA7C,cACc,eA3CNO,cC8HLqG,cAzHb,SAAAA,EAAY3G,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAA+H,IACjBhI,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAwF,GAAApF,KAAA3C,KAAMoB,KAwBR4G,oBAAsB,WAkBpB,OAjBuBjI,EAAKqB,MAAM6G,eACDC,IAAI,SAAClC,EAASmC,GAC7C,OACElI,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACEoB,IAAG,UAAAzB,OAAYwB,GACflB,UAAWjB,EAAQiB,UACnBC,SAAUlB,EAAQkB,UAElBjH,EAAAC,EAAAC,cAACkI,EAAD,CACEJ,eAAgBlI,EAAKqB,MAAM6G,eAC3BjC,QAASA,EACTxE,QAAS,kBAAMzB,EAAKiD,SAAS,CAAE+D,UAAWf,WArCjCjG,EA8CnBuI,WAAa,WACXvI,EAAKiD,SAAS,CAAE+D,UAAW,QA/CVhH,EAmDnBwI,kBAAoB,SAAAC,GAClBzI,EAAKiD,SAAS,CAAEwF,cApDCzI,EAwDnB0I,YAAc,WAAM,IACV1B,EAAchH,EAAK6C,MAAnBmE,UACR,OACEA,GACE9G,EAAAC,EAAAC,cAACuI,EAAD,CAAO3B,UAAWA,EAAWO,aAAc,kBAAMvH,EAAKuI,iBA5DzCvI,EAkEnB4I,iBAAmB,SAAAC,GACjB,GAAIA,EAEF,OACE3I,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAQE,SAAU0B,EAAS1B,SAAUD,UAAW2B,EAAS3B,WACvDhH,EAAAC,EAAAC,cAAC0I,EAAD,QAvEW9I,EA8EnB+I,cAAgB,SAAAC,GAA6B,IAA1B9B,EAA0B8B,EAA1B9B,UAAWC,EAAe6B,EAAf7B,SAC5BnH,EAAKwI,kBAAkB,CACrBtB,YACAC,WACA8B,KAAM,GACNC,MAAO,GACPC,SAAU,KACVC,uBAAwB,IAAIC,IAC5BC,mBAAoB,QApFtBtJ,EAAK6C,MAAQ,CACX0G,cAAe,GACfrB,eAAgB,GAChBsB,aAAc,GACdC,kBAAmB,GACnBhB,SAAU,CACRtB,SAAU,SACVD,UAAW,OACX+B,KAAM,GACNC,MAAO,GACPC,SAAU,MAEZnC,UAAW,MAdIhH,mFAkBC,IAAA+C,EAAA9C,KAClB+C,WAAW,WAAM,IACP0G,EAAiB3G,EAAK1B,MAAtBqI,aACR3G,EAAKgG,cAAcW,IAClB,uCAqEI,IACCjB,EAAaxI,KAAK4C,MAAlB4F,SACAiB,EAAiBzJ,KAAKoB,MAAtBqI,aAER,OACExJ,EAAAC,EAAAC,cAAC6G,EAAA,EAADzE,OAAAmH,OAAA,GACMlB,EADN,CAEEmB,qBArGWC,wGAsGXC,SAAS,6DACTC,MAAM,OAENvD,OACEwD,OAAOC,WAAa,IAChBD,OAAOE,YAAc,IACrBF,OAAOE,YAAc,GAG3BC,iBAAkBlK,KAAKuI,oBAGtBvI,KAAK2I,iBAAiBc,GAEtBzJ,KAAKgI,sBAELhI,KAAKyI,sBApHU/G,8BC6BTyI,wLAjCAC,GACXpK,KAAKoB,MAAMiJ,cAAcD,oCAGlB,IAAArK,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,iBACblB,EAAAC,EAAAC,cAACmK,EAAApK,EAAKqK,QAAN,CACEhD,KAAK,mBACLiD,SAAU,SAAAJ,GAAK,OAAIrK,EAAK0K,aAAaL,IACrCM,GAAG,UAEHzK,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,oBAAd,oBACA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,6BAAd,6BAGA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,aAAd,aACA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,6BAAd,6BAGA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,qBAAd,qBACA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,mBAAd,mBACA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,8BAAd,8BACA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,cAAd,cACA1K,EAAAC,EAAAC,cAAA,UAAQwK,MAAM,kBAAd,mBAEF1K,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,wBA5BCO,8ICuDTkJ,oLAjDJ,IACCC,EAAkB7K,KAAKoB,MAAvByJ,cAGR,OADAC,QAAQC,IAAI/K,KAAKoB,MAAM4J,mBAErB/K,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CAAKgL,GAAI,CAAEC,KAAM,KACflL,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEX,GAAG,UACHO,UAAU,iBACVK,QAASxB,KAAKoB,MAAM4J,mBAEpB/K,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,2BALf,UAoBAlB,EAAAC,EAAAC,cAACiL,GAAAlL,EAAD,KACED,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKkF,KAAN,KACEnF,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKgF,MAAN,KAAa2F,EAActD,MAC3BtH,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKmL,SAAN,CAAelK,UAAU,mBACtB0J,EAAcS,MAEjBrL,EAAAC,EAAAC,cAAA,WAASgB,UAAU,wBACjBlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,cACV0J,EAAcpD,aADjB,IACgCoD,EAAcnD,SAAU,IACrDmD,EAAclD,WAFjB,MAEgCkD,EAAchD,KAF9C,IAEqD,IAClDgD,EAAcjD,SAEjB3H,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKqB,KAAN,CAAW4B,KAAK,sCACb0H,EAAcrD,wBAxCD9F,aCNxB6J,GAAa3B,wGAEb4B,GAAaC,IAAMC,OAAO,CAC9BC,QAAS/B,GACTgC,iBAAiB,IAGZ,SAASC,GAAaC,GAQ3B,MAPIA,EAAIC,UAAYD,EAAIC,SAASC,KAC/BlB,QAAQC,IAAI,YAAae,EAAIC,SAASC,MAEtClB,QAAQC,IAAI,mBAAoBe,GAElCG,MAAM,gCAEAH,EA+CD,SAASI,GAA2BC,EAAMC,GAC/C,OAAOZ,GAAWa,IAAX,8CAAA1F,OACyCwF,EADzC,eAAAxF,OAC2DyF,EAD3D,sBCoYME,eA5Yb,SAAAA,EAAYlL,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAsM,IACjBvM,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAA+J,GAAA3J,KAAA3C,KAAMoB,KAkBRmL,YAAc,WACZxM,EAAKiD,SAAS,CACZwJ,UAAU,KArBKzM,EAyBnB0M,eAAiB,WACf,GAAI1M,EAAK6C,MAAM4J,SACb,OAAOvM,EAAAC,EAAAC,cAACuM,GAAA,EAAD,CAAU9L,GAAG,OA3BLb,EAuMnB4M,oBAAsB,SAAAC,GAEpB9B,QAAQC,IAAI6B,GACZ7M,EAAKiD,SAAS,CAAE4J,wBA1MC7M,EA6MnBiL,kBAAoB,WAClBjL,EAAKiD,SAAS,CAAE4J,mBAAoB,QA5MpC7M,EAAK6C,MAAQ,CACXd,MAAM,EAENwH,cAAe,GAEfC,aAAc,GAEdC,kBAAmB,GAEnBvB,eAAgB,GAChBuE,UAAU,EACVI,mBAAoB,KACpBC,iBAAiB,EACjBC,aAAc,IAfC/M,mFAgCjBC,KAAK+M,6DA8DYC,GACbA,EAAUC,mBAAqBjN,KAAKoB,MAAM6L,kBAC5CjN,KAAK+M,4DAIS,IDnGmBZ,EAAMC,ECmGzBtJ,EAAA9C,KACVyJ,EAAezJ,KAAKoB,MAAMqI,aAG5BA,GACFgC,IACGyB,IAAI,EDzG0Bf,EC0GN1C,EAAavC,SD1GDkF,EC0GW3C,EAAaxC,UDzG5DuE,GAAWa,IAAX,gCAAA1F,OAC2BwF,EAD3B,eAAAxF,OAC6CyF,EAD7C,mBC0GCF,GACEzC,EAAavC,SACbuC,EAAaxC,aAGhBkG,KACC1B,IAAM2B,OAAO,SAACC,EAAaC,GAAgB,IAAAC,EACCzK,EAAK1B,MAAvC6L,EADiCM,EACjCN,iBAAkBO,EADeD,EACfC,YAEpBlE,EAAgB+D,EAAYrB,MAAQ,GACpCzC,EAAe+D,EAAYtB,MAAQ,GACrCyB,EAAI,EACR,IAAKA,EAAI,EAAGA,GAAK,GAAIA,IACnBlE,EAAakE,GAAGtH,UAAW,EAE7B,IAAMuH,EAAuBnE,EAAaoE,MAAM,EAAG,IAI7CC,EAAoBtE,EAAcuE,OAAO,SAAAC,GAE7C,OADAA,EAAG/H,YAAa,EACZ+H,EAAGC,gBAELD,EAAG3H,SAAW2H,EAAGC,eAAeC,KAC9B,SAAAC,GAAI,OACFA,EAAKC,YAAcjB,IAClBgB,EAAKT,cAAgBA,GACC,cAArBS,EAAKT,eAGJM,EAAG3H,UAEL,KAGHqD,EAAoBkE,EACvB/G,OAAOiH,GACPD,MAAM,EAAG,IAKNQ,EAHiB3E,EAAkBqE,OAAO,SAAAO,GAC9C,OAAQA,EAAanM,WAEYiG,IAAI,SAAA4F,GAAE,ODjLjBO,ECmLpB5E,EAAaxC,UDnLiBqH,ECoL9B7E,EAAavC,SDpL2BkF,ECqLxC0B,EAAG7G,UDrL2CkF,ECsL9C2B,EAAG5G,SDrLVuE,IAAMY,IAAN,8DAAA1F,OACyD0H,EADzD,KAAA1H,OACqE2H,EADrE,KAAA3H,OACiFyF,EADjF,KAAAzF,OACyFwF,EADzF,0DAAAxF,OACsJ4E,MCqL/I4B,KAAK,SAAApB,GACL+B,EAAG7L,SAAWsM,KAAKC,MACjBzC,EAASC,KAAKyC,UAAU,GAAG,GAAK,GA/LlD,SAAoCX,GAClC,IAAIY,GAAY,IAAIC,MAAOC,WACvBC,EAAqB,CACvBC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAEN,OAAItC,EAAG/H,WACE8I,EAAmBH,GAAa,GAElCG,EAAmBH,GAkKR2B,CAA2BvC,MD1LxC,IAA6BO,EAAUC,EAAUlC,EAAMD,IC8LlDV,IACGyB,IAAIiB,GACJhB,KAAK,WACJ3D,EAAkB8G,KAAK,SAASpQ,EAAGqQ,GACjC,OAAOrQ,EAAE+B,SAAWsO,EAAEtO,WAExB6I,QAAQC,IAAIvB,GACZ1G,EAAKE,SAAS,CAAEwG,wBAGjBgH,MAAM3E,IAET,IAAM5D,EAAiBqB,EAAc3C,OAAO4C,GAG5CzG,EAAKE,SAAS,CACZiF,iBACAqB,gBACAC,eACAC,yBAILgH,MAAM,WACLC,KAAKC,KAAK,CACRC,SAAU,SACVrF,KAAM,OACNsF,MACE,+EACFC,mBAAmB,EACnBC,MAAO,OAEThO,EAAKE,SAAS,CAAE+N,oBAAoB,uCAcnC,IAAAC,EAAAhR,KACP8K,QAAQC,IAAI/K,KAAK4C,OADV,IAAAqO,EAOHjR,KAAK4C,MAJP4G,EAHKyH,EAGLzH,kBACA1H,EAJKmP,EAILnP,KACA0K,EALKyE,EAKLzE,SACAI,EANKqE,EAMLrE,mBAEF,OAAOJ,EAELvM,EAAAC,EAAAC,cAACuM,GAAA,EAAD,CAAU9L,GAAG,MAEbX,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,CAAKiB,UAAU,cAEblB,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CACEgL,GAAI,CAAEC,KAAM,GAAIgG,MAAO,GACvBC,GAAI,CAAEjG,KAAM,EAAGgG,MAAO,GACtBlQ,GAAG,cAED2L,EAuIA3M,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACErB,EAAAC,EAAAC,cAAA,OAAKc,GAAG,aACNhB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,wBACblB,EAAAC,EAAAC,cAAA,OACEgB,UAAU,8BACVF,GAAG,iBAIThB,EAAAC,EAAAC,cAACkR,GAAD,CACExG,cAAe7K,KAAK4C,MAAMgK,mBAC1B5B,kBAAmBhL,KAAKgL,qBAjJ5B/K,EAAAC,EAAAC,cAAA,OAAKc,GAAG,aACNhB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,wBACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,8BAA8BF,GAAG,cAC7Ca,EACC7B,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,UACRqE,KAAK,KACL0M,OAAK,EACLnQ,UAAU,YACVK,QAAS,kBAAMwP,EAAKhO,SAAS,CAAElB,MAAOA,KACtCf,gBAAc,wBACdwQ,gBAAezP,GAEf7B,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mBAAb,oBAGFlB,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,kBACRqE,KAAK,KACL0M,OAAK,EACLnQ,UAAU,YACVK,QAAS,kBAAMwP,EAAKhO,SAAS,CAAElB,MAAOA,KACtCf,gBAAc,wBACdwQ,gBAAezP,GAEf7B,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mBAAb,2BAINlB,EAAAC,EAAAC,cAACqR,GAAD,CACEnH,cAAe,SAAAD,GAAK,OAAI4G,EAAK5P,MAAMiJ,cAAcD,MAEnDnK,EAAAC,EAAAC,cAACsR,GAAAvR,EAAD,CACEwR,GAAI1R,KAAK4C,MAAMd,KACfX,UAAU,YACVF,GAAG,yBAGHhB,EAAAC,EAAAC,cAAA,OAAKwR,kBAAgB,aAAaC,cAAY,cAC5C3R,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,8BACflB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,2BAAd,cAGAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,kCACZlB,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,gCAGjBlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,kCAAd,UAEElB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mCAInBlB,EAAAC,EAAAC,cAAA,SAAOc,GAAG,oBACPuI,EAAkBtB,IAAI,SAACkG,EAAcjG,GACpC,OACElI,EAAAC,EAAAC,cAAA,MACEiI,IAAKD,EACLhH,UAAU,qCAEVlB,EAAAC,EAAAC,cAAA,UAEEF,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,+BACZlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,4BACZlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,iCACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,YACXiN,EAAayD,UAQb5R,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,6BACdlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,2CACblB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,6CAAb,MATFlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,wBACdlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,0CACblB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,6CAAb,OAaNlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,YACblB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,cACbiN,EAAa7G,KADhB,IACsBtH,EAAAC,EAAAC,cAAA,WACpBF,EAAAC,EAAAC,cAAA,KACEgD,KAAK,iCACLhC,UAAU,oBAETiN,EAAa5G,mBAS5BvH,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,4BACZlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,4BACZlB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,qBACbiN,EAAanM,SADhB,WAONhC,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,4BACZlB,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEX,GAAG,KACHY,QAASwP,EAAKrE,oBAAoBtI,KAChC2M,EACA5C,GAEFjN,UAAU,cANZ,mBAuCxBlB,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CAAKgL,GAAI,CAAEC,KAAM,GAAIgG,MAAO,GAAKC,GAAI,CAAEjG,KAAM,EAAGgG,MAAO,IACrDlR,EAAAC,EAAAC,cAAC2R,EAAD,CACExI,cAAetJ,KAAK4C,MAAM0G,cAC1BC,aAAcvJ,KAAK4C,MAAM2G,aACzBC,kBAAmBxJ,KAAK4C,MAAM4G,kBAC9BvB,eAAgBjI,KAAK4C,MAAMqF,eAC3BwB,aAAczJ,KAAKoB,MAAMqI,gBAG7BxJ,EAAAC,EAAAC,cAAC0E,EAAD,cAvYiBnD,aC1CVqQ,4LATX,OACE9R,EAAAC,EAAAC,cAAA,WAASgB,UAAU,YACjBlB,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,mEALeuB,kDCmERsQ,uBA9Db,SAAAA,EAAY5Q,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAgS,IACjBjS,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAyP,GAAArP,KAAA3C,KAAMoB,KACDwB,MAAQ,CAAEK,WAAW,GAFTlD,mFAMjBC,KAAKgD,SAAS,CACZC,WAAYjD,KAAK4C,MAAMK,iDAIdmH,GACXpK,KAAKoB,MAAMiJ,cAAcD,GACzBpK,KAAKoB,MAAM6Q,4CAEJ,IAAAnP,EAAA9C,KAEP,OADA8K,QAAQC,IAAI/K,KAAKoB,MAAM+G,OAErBlI,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,6BAA6BiH,IAAKpI,KAAKoB,MAAM+G,OAC1DlI,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,kCACblB,EAAAC,EAAAC,cAAA,OACEsE,IAAKzE,KAAKoB,MAAM8Q,QAChBxN,IAAK1E,KAAKoB,MAAM+Q,SAChBhR,UAAU,2BAGdlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,gEACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,mEACblB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,yBAAyBnB,KAAKoB,MAAM+Q,WAEpDlS,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,wCACblB,EAAAC,EAAAC,cAAA,KACEgB,UAAU,MACVgE,cAAY,WACZhC,KAAM,KAAOnD,KAAKoB,MAAM+G,MACxBiK,KAAK,SACLb,gBAAc,QACdxQ,gBAAc,mBAEdd,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,4BAEflB,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,UACRY,UAAU,oBACVK,QAAS,SAAA4I,GAAK,OAAItH,EAAK2H,aAAaL,IACpC7C,KAAK,mBACLoD,MAAO3K,KAAKoB,MAAM6L,kBALpB,YAUFhN,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,WAAWF,GAAI,IAAMjB,KAAKoB,MAAM+G,OAC7ClI,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cAAcnB,KAAKoB,MAAMiR,qBAtD1B3Q,cCkBtB4Q,GAAK1Q,IAAM2Q,GAAG,CAClBzQ,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,MACzCG,EAAG,EACHiB,cAAe,EACfC,gBAAiB,IACjBnB,QAAS,EACToB,MAAO,KAETlB,OAAQ,CACND,EAAG,GACHmB,MAAO,IACPpB,QAAS,KAIPqQ,GAAK5Q,IAAM6Q,GAAG,CAClB3Q,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,OA4JlBsQ,eAxJb,SAAAA,EAAYtR,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAA0S,IACjB3S,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAmQ,GAAA/P,KAAA3C,KAAMoB,KACDwB,MAAQ,CAAEC,QAAQ,GAFN9C,4EAMNqK,GACXpK,KAAKoB,MAAMiJ,cAAcD,sCAIhBA,GACTpK,KAAKoB,MAAM6Q,SAAS7H,GACpBpK,KAAKoB,MAAMuR,WAAW3S,KAAKoB,MAAMwR,WAAY5S,KAAKoB,MAAMyR,wDAGvCC,IACZA,EAASC,UAAY/S,KAAKoB,MAAM2R,UACnC/S,KAAKgD,SAAS,CAAEH,QAAQ,qCAKnB,IAAAC,EAAA9C,KACC6C,EAAW7C,KAAK4C,MAAhBC,OAEFmQ,EAAgB,CACpB,CACEb,SAAU,0BACVlF,iBAAkB,kBAClBgG,MAxES,6BAyETC,UAAW,GACXb,SAAU,gCAEZ,CACEF,SAAU,0BACVlF,iBAAkB,mBAClBgG,MA3EK,mCA4ELC,UAAW,GACXb,SACE,kGAEJ,CACEF,SAAU,mCACVlF,iBAAkB,4BAClBgG,MAlFI,0BAmFJC,UAAW,GACXb,SACE,wEAEJ,CACEF,SAAU,uBACVlF,iBAAkB,YAClBgG,MA9FK,8BA+FLC,UAAW,GACXb,SAAU,qDAGZ,CACEF,SAAU,sBACVlF,iBAAkB,oBAClBgG,MApGK,mCAqGLC,UAAW,GACXb,SACE,qEAGJ,CACEF,SAAU,2BACVlF,iBAAkB,6BAClBgG,MA9GO,iCA+GPC,UAAW,GACXb,SACE,sGAGJ,CACEF,SAAU,wBACVlF,iBAAkB,aAClBgG,MAnHK,0BAoHLC,UAAW,GACXb,SACE,6EAEJ,CACEF,SAAU,cACVlF,iBAAkB,iBAClBgG,MA1HY,iCA2HZC,UAAW,GACXb,SACE,oEAGN,OACEpS,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAWe,GAAG,kBAEZhB,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,mBACdlB,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEX,GAAG,KACHY,QAASxB,KAAKoB,MAAM+R,aACpBhS,UAAU,kBAEVlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,2BALf,YAYJlB,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,CAAKiB,UAAU,iCACblB,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CAAKkT,GAAI,GAAIlI,GAAI,GAAIkG,GAAI,EAAGiC,GAAI,GAC9BpT,EAAAC,EAAAC,cAACmS,GAAD,CAAIpP,KAAML,EAAS,OAAS,SAAU1B,UAAU,iBAC9ClB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,KACED,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,+BAAb,6BAIFlB,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,0BAAhB,wJAOH6R,EAAc9K,IAAI,SAACoL,EAAcnL,GAChC,OACElI,EAAAC,EAAAC,cAACqS,GAAD,CAAIpK,IAAKD,EAAOhH,UAAU,QACxBlB,EAAAC,EAAAC,cAACoT,GAAD,CAEEpB,SAAUmB,EAAanB,SACvBD,QAASoB,EAAaL,MACtBhG,iBAAkBqG,EAAarG,iBAC/BoF,SAAUiB,EAAajB,SACvBlK,MAAOA,EAEPkC,cAAe,SAAAD,GAAK,OAAItH,EAAK1B,MAAMiJ,cAAcD,IACjD6H,SAAU,SAAA7H,GAAK,OAAItH,EAAK0Q,WAAWpJ,oBA5IxB1I,aC9C3BC,WAAUC,IAAMC,QAAQ,CAC5BC,KAAM,CACJC,WAAY,CAAEC,KAAM,YAAaC,SAAU,MAC3CG,EAAG,EACHiB,cAAe,EACfC,gBAAiB,EACjBnB,QAAS,EACToB,MAAO,GAETlB,OAAQ,CACND,EAAG,EACHmB,MAAO,EACPpB,QAAS,MAIPqB,GAAM5B,IAAM6B,IAAI,CACpB3B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,MAG3BwB,GAAIhC,IAAMiC,EAAE,CAChB/B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,OAG3B4B,GAAapC,IAAM6B,IAAI,CAC3B3B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,OAmDlBqR,eA/Cb,SAAAA,EAAYrS,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAyT,IACjB1T,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAkR,GAAA9Q,KAAA3C,KAAMoB,KACDwB,MAAQ,CAAEC,QAAQ,GAFN9C,mFAMjBC,KAAKgD,SAAS,CAAEH,QAAQ,yCAGbuH,GACXpK,KAAKoB,MAAM6Q,WACXjS,KAAKoB,MAAMiJ,cAAcD,GACzBpK,KAAKoB,MAAMuR,WAAW3S,KAAKoB,MAAMwR,WAAY5S,KAAKoB,MAAMyR,8CAEjD,IAAA/P,EAAA9C,KACC6C,EAAW7C,KAAK4C,MAAhBC,OAER,OACE5C,EAAAC,EAAAC,cAACuT,GAAD,CAASxQ,KAAML,EAAS,OAAS,SAAU1B,UAAU,eACnDlB,EAAAC,EAAAC,cAACwT,GAAD,CAAKxS,UAAU,WACflB,EAAAC,EAAAC,cAACyT,GAAD,CAAGzS,UAAU,aAAb,wDAEAlB,EAAAC,EAAAC,cAAC0T,GAAD,KACE5T,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,UACRiB,QAAS,SAAA4I,GAAK,OAAItH,EAAK2H,aAAaL,IACpC7C,KAAK,eACLoD,MAAM,WAJR,UASA1K,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,YACRiB,QAAS,SAAA4I,GAAK,OAAItH,EAAK2H,aAAaL,IACpC7C,KAAK,eACLoD,MAAM,UACNxJ,UAAU,QALZ,mBAjCkBO,wBC5BboS,oLANJ,IAdSC,EAAMC,EAcfC,EACgCjU,KAAKoB,MAApC8S,EADDD,EACCC,cAAerB,EADhBoB,EACgBpB,YACvB,OAAO5S,EAAAC,EAAAC,cAAA,gBAhBS4T,EAgBYG,EAhBNF,EAgBqBnB,EAdjCsB,MAAMC,MAAM,KAAM,CAAEC,OAAQN,IAAQ7L,IAAI,SAACoM,EAAKnM,GAAN,OAClDlI,EAAAC,EAAAC,cAAA,QACEiI,IAAKD,EAELhH,UAAWgH,IAAU6L,EAAmB,cAAgB,OAH1D,qBAUoBtS,iCCsNT6S,uBA1Nb,SAAAA,EAAYnT,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAuU,IACjBxU,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAgS,GAAA5R,KAAA3C,KAAMoB,KACDwB,MAAQ,CACX4R,oBAAqB,CACnBtN,SAAU,KACVD,UAAW,MAEbwN,kBAAmB,GACnBC,sBAAsB,EACtBC,cAAc,EACdC,WAAW,GAIb7U,EAAK8U,kBAAoBC,IAAMC,YAC/BhV,EAAKiV,aAAe,KACpBjV,EAAKkV,mBAAqBlV,EAAKkV,mBAAmB5Q,KAAxB9B,OAAA+B,EAAA,EAAA/B,CAAAxC,IAC1BA,EAAKmV,uBAAyBnV,EAAKmV,uBAAuB7Q,KAA5B9B,OAAA+B,EAAA,EAAA/B,CAAAxC,IAC9BA,EAAKoV,aAAepV,EAAKoV,aAAa9Q,KAAlB9B,OAAA+B,EAAA,EAAA/B,CAAAxC,IACpBA,EAAKqV,WAAarV,EAAKqV,WAAW/Q,KAAhB9B,OAAA+B,EAAA,EAAA/B,CAAAxC,IAnBDA,mFAyBjB,IAAIsV,EAAY,IAAIC,OAAOC,KAAKC,OAAO,QAAS,QAC5CC,EAAY,IAAIH,OAAOC,KAAKC,OAAO,QAAS,QAC5CE,EAAc,IAAIJ,OAAOC,KAAKI,aAAaN,EAAWI,GAG1DzV,KAAKgV,aAAe,IAAIM,OAAOC,KAAKK,OAAOC,aACzC7V,KAAK6U,kBAAkBiB,QACvB,CACEC,OAAQL,EACRM,MAAO,CAAC,WACRC,sBAAuB,CAAEC,QAAS,QAItClW,KAAKgV,aAAamB,YAAY,gBAAiBnW,KAAKiV,yDAGzC7K,GACX,IAAMgM,EAAShM,EAAMgM,OACfzL,EAAwB,aAAhByL,EAAO9K,KAAsB8K,EAAOC,QAAUD,EAAOzL,MAC7DpD,EAAO6O,EAAO7O,KAEpBvH,KAAKgD,SAALT,OAAA+T,EAAA,EAAA/T,CAAA,GACGgF,EAAOoD,iDAMV3K,KAAKgD,SAAS,CACZ0R,sBAAsB,IAExB,IAAM6B,EAAQvW,KAAKgV,aAAawB,WAC1BvP,EAAYsP,EAAME,SAASjO,SAASkO,GAAGC,EACvCzP,EAAWqP,EAAME,SAASjO,SAASoO,GAAGD,EAE5C3W,KAAKgD,SAAS,CACZwR,oBAAqB,CACnBtN,SAAUA,EACVD,UAAWA,GAEbyN,sBAAsB,IAIxB1U,KAAKoB,MAAMyV,cAAc3P,EAAUD,GAGnCjH,KAAKoV,kDAIMhL,IAEkB,IADhBA,EAAM0M,cACVC,kBACP3M,EAAM4M,iBACN5M,EAAM6M,mBAERjX,KAAKgD,SAAS,CAAE4R,WAAW,qDAGJ,IAAA9R,EAAA9C,KAAAiR,EAC+BjR,KAAK4C,MAAnD4R,EADevD,EACfuD,oBAAqBE,EADNzD,EACMyD,qBAG7B,IAAKF,EAAoBtN,SAAU,CAEjClH,KAAKkX,wBAAwBxC,GAE7B,IAAM9L,EAAWmB,OAAOoN,WAAapN,OAAOoN,UAAUC,YAClDxO,GACFA,EAASyO,mBACP,SAAA1G,GAAY,IAEF+D,EAAyB5R,EAAKF,MAA9B8R,qBACR5R,EAAKoU,wBAAwBxC,GAG7B5R,EAAKwU,eACH3G,EAAS4G,OAAOrQ,SAChByJ,EAAS4G,OAAOtQ,WAGlBnE,EAAK1B,MAAMyV,cACTlG,EAAS4G,OAAOrQ,SAChByJ,EAAS4G,OAAOtQ,WAIlBnE,EAAKsS,cAEP,SAAAoC,GACE1U,EAAKE,SAAS,CACZkE,SAAU,eACVD,UAAW,kBAEb6D,QAAQC,IAAI,yBAA0ByM,sDAQxBC,GACtBzX,KAAKgD,SAAS,CAAE0R,sBAAuB+C,2CAI1BvQ,EAAUD,GAAW,IAAA+J,EAAAhR,KAC9B0X,EAAS,CACXtP,IAAKwB,0CACL+N,OAAM,GAAAhR,OAAKO,EAAL,KAAAP,OAAiBM,IAIzB,OAAOwE,IACJY,IADI,yDAAA1F,OAGD+Q,EAAOtP,IAHN,YAAAzB,OAIQ+Q,EAAOC,SAEnBxK,KAAK,SAAApB,GAEJiF,EAAKhO,SAAS,CACZyR,kBAAmB1I,EAASC,KAAK4L,QAAQ,GAAGC,2DAUlD7X,KAAKgD,SAAS,CAAE2R,cAAc,qCAGvB,IAAAmD,EAAA9X,KAGC4U,EAAc5U,KAAK4C,MAAnBgS,UAGR,OAAgC,IAA5B5U,KAAK4C,MAAM+R,aACN1U,EAAAC,EAAAC,cAACuM,GAAA,EAAD,CAAU9L,GAAG,SAIpBX,EAAAC,EAAAC,cAACmK,EAAApK,EAAD,CACE6X,YAAU,EACVnD,UAAWA,EACXoD,SAAU,SAAAC,GAAC,OAAIH,EAAKI,aAAaD,KAEjChY,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,eACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,uBACblB,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,UACRiB,QAAS,WACPsW,EAAK5C,2BAGPjV,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,4BAGjBlB,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACEoL,KAAK,OACL8M,YAAY,sBACZ7Q,KAAK,oBACLoD,MAAO3K,KAAK4C,MAAM6R,kBAClBjK,SAAUxK,KAAKmV,aACflU,GAAG,eACHoX,IAAKrY,KAAK6U,kBACVyD,UAAQ,IAGVrY,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,sBACZnB,KAAK4C,MAAM8R,qBACVzU,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQK,QAAQ,OAAOiB,QAASxB,KAAKoV,YACnCnV,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,iCAGflB,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQoL,KAAK,SAAS/K,QAAQ,qBAC5BN,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,6BAjNK2T,IAAMpT,YCFlCC,WAAUC,IAAMC,QAAQ,CAC5BC,KAAM,CACJC,WAAY,CAAEC,KAAM,YAAaC,SAAU,MAC3CG,EAAG,EACHiB,cAAe,EACfC,gBAAiB,EACjBnB,QAAS,EACToB,MAAO,GAETlB,OAAQ,CACND,EAAG,EACHmB,MAAO,EACPpB,QAAS,MAIPqB,GAAM5B,IAAM6B,IAAI,CACpB3B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,MAG3BwB,GAAIhC,IAAMiC,EAAE,CAChB/B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,OAG3BmW,GAAQ3W,IAAM4W,MAAM,CACxB1W,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,QAG3BqW,GAAiB7W,IAAM6B,IAAI,CAC/B3B,KAAM,CACJC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KACzCC,EAAG,EACHC,QAAS,EACTC,EAAG,GAELC,OAAQ,CAAEH,EAAG,EAAGC,QAAS,EAAGC,EAAG,OA0ElBsW,eAtEb,SAAAA,EAAYtX,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAA0Y,IACjB3Y,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAmW,GAAA/V,KAAA3C,KAAMoB,KACDwB,MAAQ,CAAEC,QAAQ,GAFN9C,kFAIA+S,IACZA,EAASC,UAAY/S,KAAKoB,MAAM2R,UACnC/S,KAAKgD,SAAS,CAAEH,QAAQ,qCAGnB,IAAAC,EAAA9C,KACC6C,EAAW7C,KAAK4C,MAAhBC,OACR,OACE5C,EAAAC,EAAAC,cAACwY,GAAD,CACEzV,KAAML,EAAS,OAAS,SACxB1B,UAAU,+BAEVlB,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,mBACdlB,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEX,GAAG,KACHY,QAASxB,KAAKoB,MAAM+R,aACpBhS,UAAU,kBAEVlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,2BALf,YAUJlB,EAAAC,EAAAC,cAACyY,GAAD,CAAKzX,UAAU,sBACflB,EAAAC,EAAAC,cAAC0Y,GAAD,CAAG1X,UAAU,aAAb,sCACAlB,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,KACED,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CACEgL,GAAI,CAAEC,KAAM,IACZhK,UAAU,uCAEVlB,EAAAC,EAAAC,cAACsY,GAAD,CAAgBtX,UAAU,sBACxBlB,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CAAKiB,UAAU,0CACblB,EAAAC,EAAAC,cAAC2Y,GAAD,CACEjC,cAAe7W,KAAKoB,MAAMyV,cAC1B5E,SAAU,SAAA7H,GAAK,OAAItH,EAAK1B,MAAM6Q,SAAS7H,UAMjDnK,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,KACED,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CAAKgL,GAAI,CAAEC,KAAM,IAAMhK,UAAU,iCAE/BlB,EAAAC,EAAAC,cAACmK,EAAApK,EAAD,CAAMiB,UAAU,uBACdlB,EAAAC,EAAAC,cAAA,OAAKiI,IAAI,gBAAgBjH,UAAU,0BACjClB,EAAAC,EAAAC,cAACoY,GAAD,KACEtY,EAAAC,EAAAC,cAACmK,EAAApK,EAAK6Y,MAAN,CACEzN,KAAK,WACLrK,GAAG,eACHE,UAAU,kBAEZlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,cAAhB,0CAC0C,IACxClB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,kBAAhB,+BA3DWO,aCGhBoS,eAxDb,SAAAA,EAAY1S,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAA8T,IACjB/T,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAuR,GAAAnR,KAAA3C,KAAMoB,KACDwB,MAAQ,CAEXsR,cAAe,EACfrB,YAAa,GALE9S,mFASCmU,EAAerB,GACjC7S,KAAKgD,SAAS,CACZkR,gBACArB,iDAGK,IAAA/P,EAAA9C,KAAAiR,EACgCjR,KAAK4C,MAApCsR,EADDjD,EACCiD,cAAerB,EADhB5B,EACgB4B,YACvB,OACE5S,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACErB,EAAAC,EAAAC,cAAA,WAASgB,UAAU,iCACjBlB,EAAAC,EAAAC,cAAC6Y,GAAD,CACE9E,cAAeA,EACfrB,YAAaA,KAIjB5S,EAAAC,EAAAC,cAAC8Y,GAAA/Y,EAAD,CAAYgZ,aAAclZ,KAAKmZ,WAAYC,YAAa,GACtDnZ,EAAAC,EAAAC,cAACkZ,GAAD,CAEEC,QAAS,MAETjP,cAAe,SAAAD,GAAK,OAAItH,EAAK1B,MAAMiJ,cAAcD,IACjDuI,WAAY,SAACuB,EAAerB,GAAhB,OACV/P,EAAKyW,oBAAoBrF,EAAerB,MAI5C5S,EAAAC,EAAAC,cAACqZ,GAAD,CACEF,QAAS,UACTjP,cAAe,SAAAD,GAAK,OAAItH,EAAK1B,MAAMiJ,cAAcD,IACjDuI,WAAY,SAACuB,EAAerB,GAAhB,OACV/P,EAAKyW,oBAAoBrF,EAAerB,MAI5C5S,EAAAC,EAAAC,cAACsZ,GAAD,CACEH,QAAS,WACTzC,cAAe7W,KAAKoB,MAAMyV,iBAG9B5W,EAAAC,EAAAC,cAAC0E,EAAD,cAnDgBnD,aC8HTgY,uBAnIb,SAAAA,EAAYtY,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAA0Z,IACjB3Z,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAmX,GAAA/W,KAAA3C,KAAMoB,KACDwB,MAAQ,CACX+W,SAAU,GACVC,SAAU,IAJK7Z,+EAOHqK,GAAO,IAAAyP,EACGzP,EAAMgM,OAAtB7O,EADasS,EACbtS,KAAMoD,EADOkP,EACPlP,MACd3K,KAAKgD,SAALT,OAAA+T,EAAA,EAAA/T,CAAA,GAAiBgF,EAAOoD,yCAEbP,GAAO,IVmBK0P,EUnBLhX,EAAA9C,KAClBoK,EAAM4M,kBVkBiB8C,EUjBZ9Z,KAAK4C,MVkBX4I,GACJuO,KAAK,sBAAuBD,GAC5BtJ,MAAM3E,KUpBgBsB,KAAK,SAAApB,GAC1BjB,QAAQC,IAAI,iBAAkBgB,EAASC,MAEvClJ,EAAK1B,MAAM4Y,cAAcjO,EAASC,yCAG7B,IAAAgF,EAAAhR,KACCqB,EAAgBrB,KAAKoB,MAArBC,YAER,OACEpB,EAAAC,EAAAC,cAAA,WAASgB,UAAU,cAChBE,EACCpB,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,iBACTha,EAAAC,EAAAC,cAAA,WAAS8Z,MAAM,qBACbha,EAAAC,EAAAC,cAAA,MAAI8Z,MAAM,+BAAV,mCAMJha,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,iBACTha,EAAAC,EAAAC,cAAA,WAAS8Z,MAAM,qBACbha,EAAAC,EAAAC,cAAA,MAAI8Z,MAAM,+BAAV,kBACAha,EAAAC,EAAAC,cAAA,KAAG8Z,MAAM,eAAT,sCACAha,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAM6X,SAAU,SAAA5N,GAAK,OAAI4G,EAAKkH,aAAa9N,KACzCnK,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,0BACTha,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,wBAEXha,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,0BACTha,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,uBACTha,EAAAC,EAAAC,cAAA,QAAM8Z,MAAM,oBACT,IACDha,EAAAC,EAAAC,cAAA,KAAG8Z,MAAM,mBAAoB,MAGjCha,EAAAC,EAAAC,cAAA,SACEqK,SAAU,SAAAJ,GACR4G,EAAKkJ,gBAAgB9P,IAEvBO,MAAO3K,KAAK4C,MAAMuX,MAClB5S,KAAK,WACL0S,MAAM,eACN7B,YAAY,gBACZ9M,KAAK,WAITrL,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,0BACTha,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,uBACTha,EAAAC,EAAAC,cAAA,QAAM8Z,MAAM,oBACT,IACDha,EAAAC,EAAAC,cAAA,KAAG8Z,MAAM,mBAAoB,MAGjCha,EAAAC,EAAAC,cAAA,UAAQ8Z,MAAM,gBACZha,EAAAC,EAAAC,cAAA,UAAQia,SAAS,IAAjB,qBACAna,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,mCAIJF,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,0BACTha,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,uBACTha,EAAAC,EAAAC,cAAA,QAAM8Z,MAAM,oBACT,IACDha,EAAAC,EAAAC,cAAA,KAAG8Z,MAAM,eAAgB,MAG7Bha,EAAAC,EAAAC,cAAA,SACE8Z,MAAM,eACN7B,YAAY,kBACZ9M,KAAK,WACL/D,KAAK,cAITtH,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,0BACTha,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,uBACTha,EAAAC,EAAAC,cAAA,QAAM8Z,MAAM,oBACT,IACDha,EAAAC,EAAAC,cAAA,KAAG8Z,MAAM,eAAgB,MAG7Bha,EAAAC,EAAAC,cAAA,SACEqK,SAAU,SAAAJ,GACR4G,EAAKkJ,gBAAgB9P,IAEvBO,MAAO3K,KAAK4C,MAAMgX,SAClBS,GAAC,EACDJ,MAAM,eACN7B,YAAY,kBACZ9M,KAAK,WACL/D,KAAK,cAITtH,EAAAC,EAAAC,cAAA,OAAK8Z,MAAM,cACTha,EAAAC,EAAAC,cAAA,UAAQmL,KAAK,SAAS2O,MAAM,6BACzB,IADH,iBAEiB,OAKrBha,EAAAC,EAAAC,cAAA,KAAG8Z,MAAM,eAAT,oBACmBha,EAAAC,EAAAC,cAAA,KAAGgD,KAAK,UAAR,UAA4B,gBAzHtCzB,uBCsGV4Y,uBApGb,SAAAA,EAAYlZ,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAsa,IACjBva,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAA+X,GAAA3X,KAAA3C,KAAMoB,KACDwB,MAAQ,CACX+W,SAAU,GACVC,SAAU,IAJK7Z,+EAOHqK,GAAO,IAAAyP,EACGzP,EAAMgM,OAAtB7O,EADasS,EACbtS,KAAMoD,EADOkP,EACPlP,MACd3K,KAAKgD,SAALT,OAAA+T,EAAA,EAAA/T,CAAA,GAAiBgF,EAAOoD,yCAEbP,GAAO,IX8BImQ,EW9BJzX,EAAA9C,KAElBoK,EAAM4M,kBX4BgBuD,EW3BZva,KAAK4C,MX4BV4I,GACJuO,KAAK,qBAAsBQ,GAC3B/J,MAAM3E,KW9BesB,KAAK,SAAApB,GACzBjB,QAAQC,IAAI,SAAUgB,EAASC,MAE/BlJ,EAAK1B,MAAMoZ,aAAazO,EAASC,yCAI5B,IAAAgF,EAAAhR,KACP,OAAOA,KAAKoB,MAAMC,YAChBpB,EAAAC,EAAAC,cAACsa,GAAA,EAAD,CAAU7Z,GAAG,eAEbX,EAAAC,EAAAC,cAAA,WAASgB,UAAU,aACjBlB,EAAAC,EAAAC,cAAA,WAASgB,UAAU,YACjBlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,aACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,kBACblB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,QACZlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,2BAAhB,OACAlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,yBAAhB,UACAlB,EAAAC,EAAAC,cAAA,QAAMgB,UAAU,mBAAhB,aAGJlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OAEblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,yCACblB,EAAAC,EAAAC,cAAA,OACEsE,IAAI,uDACJC,IAAI,mEACJvD,UAAU,eAIdlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,sBACblB,EAAAC,EAAAC,cAAA,QACE6X,SAAU,SAAA5N,GAAK,OAAI4G,EAAKkH,aAAa9N,IACrCjJ,UAAU,uCAEVlB,EAAAC,EAAAC,cAAA,KAAGua,SAAS,WAAZ,iBAEAza,EAAAC,EAAAC,cAAA,SACEmL,KAAK,WACL/D,KAAK,WACLpG,UAAU,oBACVwZ,mBAAiB,YACjBnQ,SAAU,SAAAJ,GACR4G,EAAKkJ,gBAAgB9P,IAEvBO,MAAO3K,KAAK4C,MAAM+W,UAAY,GAC9BvB,YAAY,YAEdnY,EAAAC,EAAAC,cAAA,SACEmL,KAAK,WACL/D,KAAK,WACLpG,UAAU,oBACVwZ,mBAAiB,eACjBnQ,SAAU,SAAAJ,GACR4G,EAAKkJ,gBAAgB9P,IAEvBO,MAAO3K,KAAK4C,MAAMgX,UAAY,GAC9BxB,YAAY,cAEdnY,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,iCACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,kCACblB,EAAAC,EAAAC,cAAA,SAAOmL,KAAK,WAAWnK,UAAU,yBACjClB,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,wBAAjB,iBAKJlB,EAAAC,EAAAC,cAAA,UAAQgB,UAAU,8BAA8BmK,KAAK,UAArD,WAIArL,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAA,KAAGgD,KAAK,WAAR,kCAzFIzB,wBCHlBkZ,oLAEF,OAAQ5a,KAAKoB,MAAMyZ,uBAEd7a,KAAKoB,MAAM0Z,qBAEV9a,KAAKoB,MAAMmW,OACTtX,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,UAAKH,KAAKoB,MAAMmW,OAAOrQ,WAC5CjH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAAkBF,EAAAC,EAAAC,cAAA,UAAKH,KAAKoB,MAAMmW,OAAOtQ,YAC7ChH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,UAAKH,KAAKoB,MAAMmW,OAAOwD,WAC5C9a,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAgBF,EAAAC,EAAAC,cAAA,UAAKH,KAAKoB,MAAMmW,OAAOyD,UAC3C/a,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,mBAAcF,EAAAC,EAAAC,cAAA,UAAKH,KAAKoB,MAAMmW,OAAO0D,UAG3Chb,EAAAC,EAAAC,cAAA,+CAXFF,EAAAC,EAAAC,cAAA,yCAFFF,EAAAC,EAAAC,cAAA,+DAHW2U,IAAMpT,WAoBVwZ,yBAAW,CACxBC,gBAAiB,CACfC,oBAAoB,GAEtBC,oBAAqB,KAJRH,CAKZN,ICsKYU,uBAlLb,SAAAA,EAAYla,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAsb,IACjBvb,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAA+Y,GAAA3Y,KAAA3C,KAAMoB,KACDwB,MAAQ,CACXd,MAAM,EACN0G,SAAU,CACRtB,SAAU,SACVD,UAAW,OACX+B,KAAM,GACNC,MAAO,GACPC,SAAU,MAEZ2B,cAAe,GACf0Q,MAAO,GACP/O,UAAU,GAbKzM,mFAgBC,IbUcqO,EaVdtL,EAAA9C,KAEV0X,EAAW1X,KAAKoB,MAAMoa,MAAtB9D,QbQwBtJ,EaNZsJ,EAAO+D,YbOtBjQ,GACJa,IADI,0BAAA1F,OAC0ByH,IAC9BoC,MAAM3E,KaTiCsB,KAAK,SAAApB,GAE3CjB,QAAQC,IAAI,oBAAqBgB,EAASC,MAE1C,IAAMnB,EAAgBkB,EAASC,KAG3B0P,GADI,IAAI/M,MACFgN,SACV7Q,QAAQC,IAAI2Q,GACZ5Q,QAAQC,IAAIF,EAAc+Q,QAC1B,IAAIL,EAAQ,GACZ,GACE1Q,EAAcgR,QACdhR,EAAciR,SACdjR,EAAckR,WACdlR,EAAcmR,UACdnR,EAAcoR,QACdpR,EAAcqR,UACdrR,EAAc+Q,OACd,CACA,OAAQF,GACR,KAAK,EACHH,EAAQ1Q,EAAcgR,OACtB,MACF,KAAK,EACHN,EAAQ1Q,EAAciR,QACtB,MACF,KAAK,EACHP,EAAQ1Q,EAAckR,UACtB,MACF,KAAK,EACHR,EAAQ1Q,EAAcmR,SACtB,MACF,KAAK,EACHT,EAAQ1Q,EAAcoR,OACtB,MACF,KAAK,EACHV,EAAQ1Q,EAAcqR,SACtB,MACF,KAAK,EACHX,EAAQ1Q,EAAc+Q,OACtB,MACF,QACE9Q,QAAQC,IAAI,+BAEA,KAAVwQ,IACFA,EAAQ,iBAGVA,EAAQ,uBAEVzQ,QAAQC,IAAIwQ,GAEZzY,EAAKE,SAAS,CAAE6H,gBAAe0Q,6CAI1B,IAAAvK,EAAAhR,KAAAiR,EACgCjR,KAAK4C,MAApCd,EADDmP,EACCnP,KAAM+I,EADPoG,EACOpG,cAAe0Q,EADtBtK,EACsBsK,MACrB/S,EAAaxI,KAAK4C,MAAlB4F,SAGR,OACEvI,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,CAAKiB,UAAU,cAEblB,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CACEgL,GAAI,CAAEC,KAAM,GAAIgG,MAAO,GACvBC,GAAI,CAAEjG,KAAM,EAAGgG,MAAO,GACtBlQ,GAAG,cAEHhB,EAAAC,EAAAC,cAAA,OAAKc,GAAG,cACRhB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,wBACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cAAcF,GAAG,cAC7Ba,EACC7B,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,UACRqE,KAAK,KACL0M,OAAK,EACLnQ,UAAU,YACVK,QAAS,kBAAMwP,EAAKhO,SAAS,CAAElB,MAAOA,KACtCf,gBAAc,wBACdwQ,gBAAezP,GAEf7B,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mBAAb,oBAGFlB,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACEK,QAAQ,kBACRqE,KAAK,KACL0M,OAAK,EACLnQ,UAAU,YACVK,QAAS,kBAAMwP,EAAKhO,SAAS,CAAElB,MAAOA,KACtCf,gBAAc,wBACdwQ,gBAAezP,GAEf7B,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,mBAAb,0BAGJlB,EAAAC,EAAAC,cAACQ,EAAA,cAAD,CAAeC,GAAG,QAChBX,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQK,QAAQ,YAAYqE,KAAK,KAAK0M,OAAK,EAACnQ,UAAU,QACpDlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,sBADf,aAKJlB,EAAAC,EAAAC,cAACsR,GAAAvR,EAAD,CACEwR,GAAI1R,KAAK4C,MAAMd,KACfX,UAAU,MACVF,GAAG,yBAEHhB,EAAAC,EAAAC,cAAA,OAAKwR,kBAAgB,aAAaC,cAAY,cAC5C3R,EAAAC,EAAAC,cAACiL,GAAAlL,EAAD,KACED,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKkF,KAAN,KACEnF,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKgF,MAAN,KAAa2F,EAActD,MAC3BtH,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKmL,SAAN,CAAelK,UAAU,mBACtB0J,EAAcS,MAEjBrL,EAAAC,EAAAC,cAAA,WAASgB,UAAU,wBACjBlB,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKic,KAAN,8BAAkCZ,GAClCtb,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,cACV0J,EAAcpD,aADjB,IACgCoD,EAAcnD,SAAU,IACrDmD,EAAclD,WAFjB,MAEgCkD,EAAchD,KAF9C,IAEqD,IAClDgD,EAAcjD,SAEjB3H,EAAAC,EAAAC,cAACiL,GAAAlL,EAAKqB,KAAN,CAAW4B,KAAK,sCACb0H,EAAcrD,oBAW/BvH,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,CAAKgL,GAAI,CAAEC,KAAM,GAAIgG,MAAO,GAAKC,GAAI,CAAEjG,KAAM,EAAGgG,MAAO,IACrDlR,EAAAC,EAAAC,cAAC6G,EAAA,EAADzE,OAAAmH,OAAA,GACMlB,EADN,CAEEmB,qBA9EWC,wGA+EXC,SAAS,6DACTC,MAAM,OACNvD,OAAQwD,OAAOE,YAAc,GAE7BC,iBAAkBlK,KAAKuI,8BApKJ7G,cCiGhB0a,uBAnGb,SAAAA,EAAYhb,GAAO,IAAArB,EAAA,OAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAoc,IACjBrc,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAA6Z,GAAAzZ,KAAA3C,KAAMoB,KACDwB,MAAQ,CACXyZ,cAAe,IAHAtc,mFAMC,IAAA+C,EAAA9C,KdEbwL,GAAWa,IAAI,oCAAoCmE,MAAM3E,IcD5CsB,KAAK,SAAApB,GACrB,IAAMsQ,EAAgBtQ,EAASC,KAC/BlB,QAAQC,IAAIsR,EAAe,cAC3BvZ,EAAKE,SAAS,CAAEqZ,qDAYX,IACCA,EAAkBrc,KAAK4C,MAAvByZ,cACR,OACEpc,EAAAC,EAAAC,cAAA,WAASgB,UAAU,aACjBlB,EAAAC,EAAAC,cAAA,SACEc,GAAG,UACHE,UAAU,sCACVmb,YAAY,IACZxS,MAAM,QAEN7J,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,iBACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,cACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,gBACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,kBACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,iBACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,cACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,qBACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,QACAlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SAAd,YAGJlB,EAAAC,EAAAC,cAAA,SAAOc,GAAG,WACPob,EAAcnU,IAAI,SAACqU,EAAapU,GAC/B,OACElI,EAAAC,EAAAC,cAAA,MAAIiI,IAAKD,GACPlI,EAAAC,EAAAC,cAAA,UAAKoc,EAAYhV,MACjBtH,EAAAC,EAAAC,cAAA,UAAKoc,EAAYtW,OACjBhG,EAAAC,EAAAC,cAAA,UAAKoc,EAAY/U,aACjBvH,EAAAC,EAAAC,cAAA,UACGoc,EAAY9U,aADf,IAC8B8U,EAAY7U,SAAU,IACjD6U,EAAY5U,YAEf1H,EAAAC,EAAAC,cAAA,UACGoc,EAAY1U,KADf,KACuB0U,EAAY3U,SAEnC3H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGgD,KAAMoZ,EAAYzU,UAAW3G,UAAU,aAA1C,SAIFlB,EAAAC,EAAAC,cAAA,UAAKoc,EAAYC,eACjBvc,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,0BACXlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,6BAIjBlB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEsc,iBAAe,MACftX,cAAY,UACZyL,MAAM,UAEN3Q,EAAAC,EAAAC,cAAA,UACEgB,UAAU,wBACVub,aAAW,SACXvX,cAAY,QACZwX,cAAY,WAEZ1c,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,cAAciC,cAAY,iBAUvDnD,EAAAC,EAAAC,cAAA,qCA9FgBuB,cCSxBkb,EAAQ,KAAUC,aAuJHC,eApJb,SAAAA,EAAY1b,GAAO,IAAArB,EAAAwC,OAAAC,EAAA,EAAAD,CAAAvC,KAAA8c,GACjB/c,EAAAwC,OAAAE,EAAA,EAAAF,CAAAvC,KAAAuC,OAAAG,EAAA,EAAAH,CAAAua,GAAAna,KAAA3C,KAAMoB,IACN,IAAI2b,EAAWC,aAAaC,QAAQ,eAFnB,OAGbF,IAEFA,EAAWG,KAAKC,MAAMJ,IAExBhd,EAAK6C,MAAQ,CACXvB,YAAa0b,EAEbK,cAAe,GACfnQ,iBAAkB,GAClBoQ,aAAc,GACdC,gBAAgB,EAChBC,gBAAiB,CAAErW,SAAU,EAAGD,UAAW,IAd5BlH,0EAkBRyd,GACLA,EAGFR,aAAaS,QAAQ,cAAeP,KAAKQ,UAAUF,IAGnDR,aAAaW,WAAW,eAE1B3d,KAAKgD,SAAS,CAAE3B,YAAamc,0CAGjBpT,GAAO,IAAAyP,EACKzP,EAAMgM,OAAtB7O,EADWsS,EACXtS,KAAMoD,EADKkP,EACLlP,MACd3K,KAAKgD,SAALT,OAAA+T,EAAA,EAAA/T,CAAA,GAAiBgF,EAAOoD,kDAGJzD,EAAUD,GAC9BjH,KAAKgD,SAAS,CACZua,gBAAiB,CAAErW,WAAUD,qDAInB,IAAAnE,EAAA9C,KfVPwL,GAAWa,IAAI,eAAemE,MAAM3E,IeYtCsB,KAAK,SAAApB,GAGJjJ,EAAK8a,WAAW,QAEjBpN,MAAM,SAAA1E,GAAG,OAAIA,qCAGT,IAAAkF,EAAAhR,KAAAiR,EACqDjR,KAAK4C,MAAzDqK,EADDgE,EACChE,iBAAkBoQ,EADnBpM,EACmBoM,aAAcE,EADjCtM,EACiCsM,gBACxC,OACEtd,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC0d,EAAD,CACExc,YAAarB,KAAK4C,MAAMvB,YACxBI,YAAa,kBAAMuP,EAAKvP,kBAI5BxB,EAAAC,EAAAC,cAAC2d,EAAA,EAAD,KACE7d,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAW7B,KACpCnc,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CACEC,KAAK,IACLE,OAAK,EACLC,OAAQ,WACN,OACEle,EAAAC,EAAAC,cAACie,EAAD,CACE/T,cAAe,SAAAD,GAAK,OAAI4G,EAAK3G,cAAcD,SAanDnK,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CACE3V,IAAI,IACJ4V,KAAK,OACLG,OAAQ,WACN,OACEle,EAAAC,EAAAC,cAACke,GAAD,CACEpR,iBAAkBA,EAClBO,YAAa6P,EACb5T,aAAc8T,EACdlT,cAAe,SAAAD,GAAK,OAAI4G,EAAK3G,cAAcD,SAKnDnK,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAO3V,IAAI,SAAS4V,KAAK,UAAUC,UAAWK,KAC9Cre,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CACE3V,IAAI,OACJ4V,KAAK,QACLG,OAAQ,WACN,OACEle,EAAAC,EAAAC,cAACoe,GAAD,CACElU,cAAe,SAAAD,GAAK,OAAI4G,EAAK3G,cAAcD,IAC3CyM,cAAe,SAAC3P,EAAUD,GAAX,OACb+J,EAAKwN,sBAAsBtX,EAAUD,SAO/ChH,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CACE3V,IAAI,SACJ4V,KAAK,UACLG,OAAQ,WACN,OACEle,EAAAC,EAAAC,cAACse,GAAD,CACEpd,YAAa2P,EAAKpO,MAAMvB,YACxB2Y,cAAe,SAAA0E,GAAI,OAAI1N,EAAK4M,WAAWc,SAK/Cze,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CACE3V,IAAI,QACJ4V,KAAK,SACLG,OAAQ,WACN,OACEle,EAAAC,EAAAC,cAACwe,GAAD,CACEtd,YAAa2P,EAAKpO,MAAMvB,YACxBmZ,aAAc,SAAAkE,GAAI,OAAI1N,EAAK4M,WAAWc,SAK9Cze,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CACEC,KAAK,kCACLC,UAAW3C,KAEbrb,EAAAC,EAAAC,cAAC4d,EAAA,EAAD,CAAOE,UAAWlM,GAAU3J,IAAI,sBA9IxB1G,aCXEkd,QACW,cAA7B7U,OAAOnB,SAASiW,UAEe,UAA7B9U,OAAOnB,SAASiW,UAEhB9U,OAAOnB,SAASiW,SAASrD,MACvB,2DCVNsD,IAASX,OACPle,EAAAC,EAAAC,cAAC4e,EAAA,EAAD,KACE9e,EAAAC,EAAAC,cAAC6e,GAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmB/H,WACrBA,UAAUgI,cAAcC,MAAMjS,KAAK,SAAAkS,GACjCA,EAAaC","file":"static/js/main.4a767114.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <Container>\n        <Navbar\n          bg=\"white\"\n          variant=\"light\"\n          expand=\"sm\"\n          fixed=\"top\"\n          collapseOnSelect=\"true\"\n        >\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              {\" \"}\n              Med<b>Direct</b>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {this.props.currentUser ? (\n                <>\n                  <LinkContainer to=\"/map\">\n                    <Nav.Link>Map</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/dashboard\">\n                    <Nav.Link>Dashboard</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/signup\">\n                    <Nav.Link onClick={() => this.props.logoutClick()}>\n                      Log Out\n                    </Nav.Link>\n                  </LinkContainer>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <Nav.Link>S'enregistrer</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>Se connecter</Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </Container>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport \"./SpeedDial.css\";\nimport posed from \"react-pose\";\n\nconst Section = posed.section({\n  open: {\n    transition: { ease: \"easeOut\", duration: 0 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 0 }\n});\n\nclass SpeedDial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isOpen: !this.state.isVisible\n      });\n    }, 0);\n  }\n\n  render() {\n    const { isOpen } = this.state;\n\n    return (\n      <Section pose={isOpen ? \"open\" : \"closed\"}>\n        <a href=\"tel:15\" className=\"float bg-danger text-white rounded-circle\">\n          <i className=\"fa fa-phone my-float fa-sm\" aria-hidden=\"true\" />{\" \"}\n          <span className=\"dial-text\">15</span>\n        </a>\n      </Section>\n    );\n  }\n}\nexport default SpeedDial;\n","import React, { PureComponent } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./IsEmergency.scss\";\nimport posed from \"react-pose\";\nimport SpeedDial from \"./SpeedDial\";\n//import { Route } from \"react-router-dom\";\n\nconst Section = posed.section({\n  open: {\n    transition: { ease: \"easeInOut\", duration: 1400 },\n    x: 0,\n    delayChildren: 0,\n    staggerChildren: 200,\n    opacity: 1,\n    delay: 0\n  },\n  closed: {\n    x: 10,\n    delay: 0,\n    opacity: 0\n  }\n});\n\nconst Div = posed.div({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1400 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 20 }\n});\n\nconst H1 = posed.h1({\n  open: {\n    transition: { ease: \"easeOut\", duration: 2000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 30 }\n});\n\nconst P = posed.p({\n  open: {\n    transition: { ease: \"easeOut\", duration: 2000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 0 }\n});\n\nconst Footer = posed.footer({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 40 }\n});\n\nconst ButtonWrap = posed.div({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1500 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 400 }\n});\n\nclass IsEmergency extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      show: false,\n      open: false\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  // show and hide modal\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  componentDidMount() {\n    this.setState({ isOpen: true });\n  }\n  render() {\n    const { isOpen } = this.state;\n    return (\n      <>\n        <Section pose={isOpen ? \"open\" : \"closed\"} className=\"bg-light\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {/* illustration */}\n              <div className=\"col-lg-8  order-first text-center order-md-1\">\n                <Div>\n                  <img\n                    src=\"/images/illustrations/medicine.svg\"\n                    alt=\"Illustration calme et apaisante de deux docteurs dans un hopital\"\n                    className=\"img-fluid\"\n                  />\n                </Div>\n              </div>\n              {/* speech and CTA */}\n              <div className=\"col-lg-4 py-4 pr-0 pb-0\">\n                <H1 className=\"display-3 pt-4 text-muted d-none d-sm-block d-sm-none\">\n                  <span className=\"text-primary font-weight-bold\">Med</span>\n                  <span className=\"text-muted font-weight-light\">Direct</span>\n                </H1>\n\n                <H1 className=\"h1 pt-4 text-left d-md-none  d-lg-none d-xl-none d-lg-block\">\n                  <span className=\"text-primary font-weight-bold\">Med</span>\n                  <span className=\"text-muted font-weight-light\">Direct</span>\n                </H1>\n                <P className=\"lead mb-3\">\n                  MedDirect vous aide a trouver les meilleurs soins d'urgence\n                  adaptés à vos besoins.\n                </P>\n                <P className=\"text-muted d-none d-sm-block d-sm-none\">\n                  Estimez les temps d'attente dans les centres de soins à\n                  proximité et trouvez des alternatives sans attendre!\n                </P>\n                <ButtonWrap>\n                  <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    className=\"mt-3\"\n                    onClick={this.handleShow}\n                  >\n                    Commencer\n                  </Button>\n                </ButtonWrap>\n              </div>\n            </div>\n          </div>\n          <Footer className=\"bg-light\">\n            <div className=\"container\">\n              <div className=\"row p-5\">\n                <p className=\"small text-muted pl-3 pb-5 pt-5 mt-4\">\n                  Fait avec amour par C. Bailey, C. Begue, T. Lesage, S.\n                  Bouaroua, et R. Veil.\n                </p>\n              </div>\n            </div>\n          </Footer>\n        </Section>\n        <SpeedDial />\n\n        <Modal centered show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <a\n                href=\"#collapse\"\n                className=\"font-weight-bold\"\n                data-toggle=\"collapse\"\n              >\n                {\" \"}\n                Urgence vitale? <i className=\"fas fa-info-circle\" />\n              </a>\n              <div id=\"collapse\" className=\"collapse\">\n                <ul>\n                  <li className=\"font-weight-normal h6\">\n                    Une perte de connaissance\n                  </li>\n                  <li className=\"font-weight-normal h6\">\n                    Des troubles neurologiques (paralysie d’un membre, ou\n                    soudaine faiblesse musculaire, troubles de la parole ou de\n                    la vision)\n                  </li>\n                  <li className=\"font-weight-normal h6\">\n                    Des douleurs thoraciques ou violentes douleurs d’apparition\n                    brutale\n                  </li>\n                  <li className=\"font-weight-normal h6\">\n                    Des difficultés respiratoires (étouffe, suffoque) :\n                    respiration rapide, bruyante\n                  </li>\n                  <li className=\"font-weight-normal h6\">\n                    Un saignement important\n                  </li>\n                  <li className=\"font-weight-normal h6\">\n                    Un violent traumatisme (accident, plaie)\n                  </li>\n                  <li className=\"font-weight-normal h6\">\n                    Une brûlure de la face ou étendue\n                  </li>\n                </ul>\n              </div>\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <p>\n              Si vous pensez ne pas être dans une urgence vitale, appellez le\n              SAMU, sinon merci de <b>cliquer sur Continuer.</b>\n            </p>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <a href=\"tel:15\">\n              <Button variant=\"danger\">\n                <i className=\"fas fa-phone\" /> Appeller le SAMU (15)\n              </Button>\n            </a>\n\n            <LinkContainer to=\"/form\">\n              <Button variant=\"primary\">\n                <i className=\"fas fa-arrow-right\" /> Continuer\n              </Button>\n            </LinkContainer>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default IsEmergency;\n","import React, { PureComponent } from \"react\";\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst hospitalUnfiltered = {\n  cursor: \"pointer\",\n  // fill: \"#ef6c60\",\n  fill: \"##7c8389\",\n  stroke: \"none\",\n  opacity: 0.5,\n  size: 20\n};\n\nconst hospitalFiltered = {\n  cursor: \"pointer\",\n  fill: \"#ef6c60\",\n  stroke: \"none\",\n  opacity: 1,\n  size: 35\n};\n\nconst structureUnfiltered = {\n  cursor: \"pointer\",\n  // fill: \"#183d62\",\n  fill: \"#7c8389\",\n  stroke: \"none\",\n  opacity: 0.5,\n  size: 20\n};\n\nconst structureFiltered = {\n  cursor: \"pointer\",\n  // fill: \"#183d62\",\n  fill: \"#65b4c1\",\n  stroke: \"none\",\n  opacity: 1,\n  size: 35\n};\n\nclass MapMarker extends PureComponent {\n  render() {\n    const { onClick } = this.props;\n    const isHospital = this.props.oneItem.group;\n    //  if false then not a hospital\n    const isFiltered = this.props.oneItem.filtered;\n    // if false then unfiltered\n\n    // console.log(isHospital);\n    if (isHospital && isFiltered) {\n      return (\n        <div>\n          <svg\n            version=\"1.1\"\n            id=\"Calque_1\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 384 512\"\n            enableBackground=\"new 0 0 384 512\"\n            height={hospitalFiltered.size}\n            style={{\n              ...hospitalFiltered,\n              transform: `translate(${-hospitalFiltered.size /\n                2}px,${-hospitalFiltered.size}px)`\n            }}\n            onClick={onClick}\n          >\n            <path\n              d=\"M192,0C86,0,0,86,0,192c0,77.4,27,99,172.3,309.7c9.5,13.8,29.9,13.8,39.5,0C357,291,384,269.4,384,192\n\tC384,86,298,0,192,0z M264,286h-39.8v-68.9h-64.3V286H120V121.1h39.8v62.4h64.3v-62.4H264V286z\"\n            />\n          </svg>\n        </div>\n      );\n    } else {\n      if (isHospital && !isFiltered) {\n        return (\n          <div>\n            <svg\n              height={hospitalUnfiltered.size}\n              viewBox=\"0 0 24 24\"\n              style={{\n                ...hospitalUnfiltered,\n                transform: `translate(${-hospitalUnfiltered.size /\n                  2}px,${-hospitalUnfiltered.size}px)`\n              }}\n              onClick={onClick}\n            >\n              <path d={ICON} />\n            </svg>\n          </div>\n        );\n      } else {\n        if (!isHospital && isFiltered) {\n          return (\n            <div>\n              <svg\n                version=\"1.1\"\n                id=\"Calque_1\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 384 512\"\n                enableBackground=\"new 0 0 384 512\"\n                height={structureFiltered.size}\n                style={{\n                  ...structureFiltered,\n                  transform: `translate(${-structureFiltered.size /\n                    2}px,${-structureFiltered.size}px)`\n                }}\n                onClick={onClick}\n              >\n                <path\n                  d=\"M192,0C86,0,0,86,0,192c0,77.4,27,99,172.3,309.7c9.5,13.8,29.9,13.8,39.5,0C357,291,384,269.4,384,192\n\tC384,86,298,0,192,0z M239.1,283.1c-10.7,4.9-23.1,7.3-37,7.3c-12.7,0-24.5-2.1-35.3-6.3c-10.8-4.2-20.1-10.1-28.1-17.8\n\tc-7.9-7.7-14.1-16.9-18.6-27.6c-4.5-10.7-6.8-22.5-6.8-35.4c0-13.2,2.3-25.2,6.9-35.9c4.6-10.7,10.9-19.8,19-27.4\n\tc8.1-7.5,17.5-13.3,28.4-17.3c10.9-4,22.6-6.1,35.2-6.1c11.6,0,23.1,2.1,34.3,6.2c11.3,4.1,20.4,10.1,27.4,18l-27,27\n\tc-3.7-5.1-8.6-8.9-14.7-11.4c-6.1-2.5-12.3-3.7-18.6-3.7c-7,0-13.4,1.3-19.2,3.8c-5.8,2.6-10.8,6.1-15,10.6c-4.2,4.5-7.5,9.8-9.8,16\n\tc-2.3,6.1-3.5,12.8-3.5,20.1c0,7.5,1.2,14.3,3.5,20.5c2.3,6.2,5.5,11.5,9.7,16c4.1,4.4,9,7.9,14.8,10.4c5.7,2.5,12,3.7,18.9,3.7\n\tc7.9,0,14.8-1.5,20.7-4.7c5.9-3.1,10.6-7.1,14.2-12.1l27.7,26.1C258.8,271.6,249.8,278.2,239.1,283.1z\"\n                />\n              </svg>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <svg\n                height={structureUnfiltered.size}\n                viewBox=\"0 0 24 24\"\n                style={{\n                  ...structureUnfiltered,\n                  transform: `translate(${-structureUnfiltered.size /\n                    2}px,${-structureUnfiltered.size}px)`\n                }}\n                onClick={onClick}\n              >\n                <path d={ICON} />\n              </svg>\n            </div>\n          );\n        }\n      }\n    }\n  }\n}\n\nexport default MapMarker;\n","import React, { PureComponent } from \"react\";\nimport \"./UserMarker.scss\";\n\nclass UserMarker extends PureComponent {\n  render() {\n    const size = 10;\n    return (\n      <div\n        className=\"dot\"\n        style={{\n          cursor: \"pointer\",\n          transform: `translate(${-size}px,${-size}px)`\n        }}\n      >\n        <div className=\"centraldot\" />\n        <div className=\"wave\" />\n        <div className=\"wave2\" />\n      </div>\n    );\n  }\n}\n\nexport default UserMarker;\n","import React, { Component } from \"react\";\nimport \"./PopUp.css\";\nimport { Popup } from \"react-map-gl\";\n\nclass PopUp extends Component {\n  render() {\n    const { popupInfo } = this.props;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <Popup\n            className=\"PopUp\"\n            // info passed\n            longitude={popupInfo.longitude}\n            latitude={popupInfo.latitude}\n            // functionality\n            closeOnClick={false}\n            anchor=\"top\"\n            onClose={this.props.onCloseClick}\n          >\n            <p className=\"card-text small\">\n              {\" \"}\n              <b>{popupInfo.name}</b>\n            </p>\n            <p className=\"card-text small\">\n              <a href=\"tel:+33{popupInfo.phoneNumber}\">\n                {popupInfo.phoneNumber}\n              </a>\n            </p>\n            <p className=\"card-text small\">\n              {popupInfo.streetNumber} {popupInfo.roadType}{\" \"}\n              {popupInfo.streetName}\n              <br />\n              {popupInfo.zipCode} {popupInfo.city}\n            </p>\n\n            <a\n              href={`http://maps.google.com/?q=${popupInfo.latitude},${\n                popupInfo.longitude\n              }`}\n              className=\"card-link small\"\n            >\n              Route Me\n            </a>\n\n            <a href={`${popupInfo.urlToPlan}`} className=\"card-link small\">\n              Access Plan{\" \"}\n            </a>\n          </Popup>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PopUp;\n","// See and copy pasta available components\nimport React, { Component } from \"react\";\nimport MapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport MapMarker from \"./MapMarker.js\";\nimport UserMarker from \"./UserMarker.js\";\nimport PopUp from \"./PopUp\";\nconst MAPBOX_KEY = process.env.REACT_APP_MAPBOX_TOKEN;\n\nclass SingleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hospitalArray: [],\n      structureArray: [],\n      altStructure: [],\n      newstructureArray: [],\n      viewport: {\n        latitude: 48.85341,\n        longitude: 2.3488,\n        zoom: 10,\n        pitch: 45,\n        bearing: -17.6\n      },\n      popupInfo: null\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const { userLocation } = this.props;\n      this._goToViewport(userLocation);\n    }, 2500);\n  }\n\n  renderMapAndMarkers = () => {\n    const structureArray = this.props.structureArray;\n    let resultArray = structureArray.map((oneItem, index) => {\n      return (\n        <Marker\n          key={`marker-${index}`}\n          longitude={oneItem.longitude}\n          latitude={oneItem.latitude}\n        >\n          <MapMarker\n            structureArray={this.props.structureArray}\n            oneItem={oneItem}\n            onClick={() => this.setState({ popupInfo: oneItem })}\n          />\n        </Marker>\n      );\n    });\n\n    return resultArray;\n  };\n\n  clearPopup = () => {\n    this.setState({ popupInfo: null });\n  };\n\n  // update map on window size\n  _onViewportChange = viewport => {\n    this.setState({ viewport });\n  };\n\n  // renders a single popup\n  renderPopup = () => {\n    const { popupInfo } = this.state;\n    return (\n      popupInfo && (\n        <PopUp popupInfo={popupInfo} onCloseClick={() => this.clearPopup()} />\n      )\n    );\n  };\n\n  // set user current marker and fly to it\n  renderUserMarker = location => {\n    if (location) {\n      // do not remove please (infinite loop line 86)\n      return (\n        <Marker latitude={location.latitude} longitude={location.longitude}>\n          <UserMarker />\n        </Marker>\n      );\n    }\n  };\n\n  // change viewport to given location\n  _goToViewport = ({ longitude, latitude }) => {\n    this._onViewportChange({\n      longitude,\n      latitude,\n      zoom: 12,\n      pitch: 45,\n      bearing: -17.6,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 2500\n    });\n  };\n\n  /////Master Render//////\n  render() {\n    const { viewport } = this.state;\n    const { userLocation } = this.props;\n\n    return (\n      <MapGL\n        {...viewport}\n        mapboxApiAccessToken={MAPBOX_KEY}\n        mapStyle=\"mapbox://styles/project3ironhack/cjsk4xibk5rjh1fmqo9k31hym\"\n        width=\"100%\"\n        //height={window.innerHeight - 56}\n        height={\n          window.innerWidth < 767\n            ? window.innerHeight - 400\n            : window.innerHeight - 56\n        }\n        // 56 to substract navbar height of window size so the map is full height\n        onViewportChange={this._onViewportChange}\n      >\n        {/* user marker  */}\n        {this.renderUserMarker(userLocation)}\n        {/* calling method below with Marker */}\n        {this.renderMapAndMarkers()}\n        {/* displaying PopUp */}\n        {this.renderPopup()}\n      </MapGL>\n    );\n  }\n}\n\nexport default SingleMap;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nclass FilterBar extends Component {\n  clickHandler(event) {\n    this.props.updatePatient(event);\n  }\n\n  render() {\n    return (\n      <div className=\"px-2 bg-light\">\n        <Form.Control\n          name=\"neededSpecialist\"\n          onChange={event => this.clickHandler(event)}\n          as=\"select\"\n        >\n          <option>Sélectionnez une spécialité.</option>\n          <option value=\"Ophtalmologiques\">Ophtalmologiques</option>\n          <option value=\"Oto-rhino-laryngologiques\">\n            Oto-rhino-laryngologiques\n          </option>\n          <option value=\"Dentaires\">Dentaires</option>\n          <option value=\"Oto-rhino-laryngologiques\">\n            Oto-rhino-laryngologiques\n          </option>\n          <option value=\"Plaies de la main\">Plaies de la main</option>\n          <option value=\"Générales\">Générales</option>\n          <option value=\"Gynéco-obstétricales\">Gynéco-obstétricales</option>\n          <option value=\"Proctology\">Proctology</option>\n          <option value=\"Psychiatriques\">Psychiatriques</option>\n        </Form.Control>\n        <div className=\"card-header\" />\n      </div>\n    );\n  }\n}\n\nexport default FilterBar;\n","import React, { Component } from \"react\";\n//import { LinkContainer } from \"react-router-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\n//import Collapse from \"react-bootstrap/Collapse\";\nimport Col from \"react-bootstrap/Col\";\n//import Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\n\nclass StructureDetail extends Component {\n  render() {\n    const { structureItem } = this.props;\n    //    const { isStructureOpen, structureItem, openingHours } = this.state;\n    console.log(this.props.emptyOneStructure);\n    return (\n      <Col sm={{ span: 12 }}>\n        <Link\n          to=\"#retour\"\n          className=\"text-secondary\"\n          onClick={this.props.emptyOneStructure}\n        >\n          <i className=\"fas fa-arrow-left mx-2\" />\n          Retour\n        </Link>\n        {/* <LinkContainer to=\"/map\">\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            block\n            className=\"back\"\n            onClick={this.props.emptyOneStructure}\n          >\n            <i className=\"fas fa-arrow-left\" /> Retour\n          </Button>\n        </LinkContainer> */}\n\n        <Card>\n          <Card.Body>\n            <Card.Title>{structureItem.name}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {structureItem.type}\n            </Card.Subtitle>\n            <address className=\"d-block p-2 bg-light\">\n              <p className=\"text-muted\">\n                {structureItem.streetNumber} {structureItem.roadType}{\" \"}\n                {structureItem.streetName} - {structureItem.city},{\" \"}\n                {structureItem.zipCode}\n              </p>\n              <Card.Link href=\"tel:+33{structureItem.phoneNumber}\">\n                {structureItem.phoneNumber}\n              </Card.Link>\n            </address>\n          </Card.Body>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default StructureDetail;\n","import axios from \"axios\";\n\nconst MAPBOX_KEY = process.env.REACT_APP_MAPBOX_TOKEN;\n\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true\n});\n\nexport function errorHandler(err) {\n  if (err.response && err.response.data) {\n    console.log(\"API Error\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err);\n  }\n  alert(\"Sorry! Something went wrong.\");\n\n  throw err;\n}\n\nexport function getHospitalList() {\n  return backendApi.get(\"/api/hospitals?size=60&offset=60\").catch(errorHandler);\n}\n\nexport function getAltStructureList() {\n  return backendApi\n    .get(\"/api/alternatives-structures?size=20&offset=20\")\n    .catch(errorHandler);\n}\n\nexport function getDistanceDuration(userLong, userLatt, long, latt) {\n  return axios.get(\n    `https://api.mapbox.com/directions-matrix/v1/mapbox/walking/${userLong},${userLatt};${long},${latt}?sources=1&annotations=distance,duration&access_token=${MAPBOX_KEY}`\n  );\n}\n\nexport function postSignUp(userSubmission) {\n  return backendApi\n    .post(\"/api/process-signup\", userSubmission)\n    .catch(errorHandler);\n}\n\nexport function getStructureDetails(oneStructure) {\n  return backendApi\n    .get(`/api/structure-details/${oneStructure}`)\n    .catch(errorHandler);\n}\n\nexport function postLogin(loginCredentials) {\n  return backendApi\n    .post(\"/api/process-login\", loginCredentials)\n    .catch(errorHandler);\n}\n\nexport function getLogout() {\n  return backendApi.get(\"/api/logout\").catch(errorHandler);\n}\n\nexport function getHospitalsbyLocation(latt, long) {\n  return backendApi.get(\n    `/api/hospitals/near?latitude=${latt}&longitude=${long}&radius=50000`\n  );\n}\n\nexport function getAtlStructuresbyLocation(latt, long) {\n  return backendApi.get(\n    `/api/alternatives-structures/near?latitude=${latt}&longitude=${long}&radius=50000`\n  );\n}\n// example function\n// export function getLogOut() {\n//   return backendApi.get(\"/api/logout\").catch(errorHandler);\n// }\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport SingleMap from \"./SingleMap.js\";\nimport FilterBar from \"./FilterBar.js\";\nimport \"./MapWrapper.scss\";\nimport { Link } from \"react-router-dom\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Swal from \"sweetalert2\";\nimport { Redirect } from \"react-router\";\nimport StructureDetail from \"./StructureDetail\";\nimport {\n  // getHospitalList,\n  // getAltStructureList,\n  //  getStructureDetails,\n  getHospitalsbyLocation,\n  getAtlStructuresbyLocation,\n  getDistanceDuration,\n  errorHandler\n} from \"../api.js\";\nimport SpeedDial from \"./SpeedDial.js\";\n\nfunction waitingTimeAccordingToHour(el) {\n  let hourOfDay = new Date().getHours();\n  let waitingTimePerHour = {\n    1: 45,\n    2: 40,\n    3: 35,\n    4: 30,\n    5: 25,\n    6: 20,\n    7: 30,\n    8: 40,\n    9: 40,\n    10: 45,\n    11: 45,\n    12: 35,\n    13: 35,\n    14: 30,\n    15: 25,\n    16: 30,\n    17: 40,\n    18: 45,\n    19: 50,\n    20: 60,\n    21: 50,\n    22: 50,\n    23: 50\n  };\n  if (el.isHospital) {\n    return waitingTimePerHour[hourOfDay] + 30;\n  }\n  return waitingTimePerHour[hourOfDay];\n}\nclass MapWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      //hospitalArray renders all the hospital from the backend\n      hospitalArray: [],\n      //Will render all the alternative structure from the backend\n      altStructure: [],\n      // newstructureArray render all the filtered hospitals from the firltering process\n      newstructureArray: [],\n      // structureArray renders all hospitals and alt structures in existance (full array)\n      structureArray: [],\n      redirect: false,\n      oneStructureDetail: null,\n      isStructureOpen: true,\n      openingHours: \"\"\n    };\n  }\n  // Allow us to filter data coming fro the back end to render only some kind of hospitals\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  componentDidMount() {\n    this.updateStructure();\n    //    let { oneStructureDetail } = this.state;\n    // if (oneStructureDetail) {\n    //   // use the ID in path params to get the details from the backend API\n    //   getStructureDetails(oneStructureDetail._id).then(response => {\n    //     // ALWAYS console.log() response.data to see what the API gave you\n    //     console.log(\"Structure details\", response.data);\n    //     // save the JSON data from the API into the state\n    //     const structureItem = response.data;\n\n    //     let d = new Date();\n    //     let n = d.getDay();\n    //     console.log(n);\n    //     console.log(structureItem.sunday);\n    //     let times = \"\";\n    //     if (\n    //       structureItem.monday ||\n    //       structureItem.tuesday ||\n    //       structureItem.wednesday ||\n    //       structureItem.thursday ||\n    //       structureItem.friday ||\n    //       structureItem.saturday ||\n    //       structureItem.sunday\n    //     ) {\n    //       switch (n) {\n    //         case 1:\n    //           times = structureItem.monday;\n    //           break;\n    //         case 2:\n    //           times = structureItem.tuesday;\n    //           break;\n    //         case 3:\n    //           times = structureItem.wednesday;\n    //           break;\n    //         case 4:\n    //           times = structureItem.thursday;\n    //           break;\n    //         case 5:\n    //           times = structureItem.friday;\n    //           break;\n    //         case 6:\n    //           times = structureItem.saturday;\n    //           break;\n    //         case 7:\n    //           times = structureItem.sunday;\n    //           break;\n    //         default:\n    //           console.log(\"Sorry, we did not find time\");\n    //       }\n    //       if (times === \"\") {\n    //         times = \"fermé\";\n    //       }\n    //     } else {\n    //       times = \"Ouvert 24h/24 - 7j/7\";\n    //     }\n    //     console.log(times);\n\n    //     this.setState({ structureItem, times });\n    //   });\n    // }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.neededSpecialist !== this.props.neededSpecialist) {\n      this.updateStructure();\n    }\n  }\n\n  updateStructure() {\n    const userLocation = this.props.userLocation;\n\n    // get data from our backend Express API (localhost:2999)\n    if (userLocation) {\n      axios\n        .all([\n          getHospitalsbyLocation(userLocation.latitude, userLocation.longitude),\n          getAtlStructuresbyLocation(\n            userLocation.latitude,\n            userLocation.longitude\n          )\n        ])\n        .then(\n          axios.spread((responseHos, responseAlt) => {\n            const { neededSpecialist, patientType } = this.props;\n            // console.log(neededSpecialist, patientType, \"Structure list\", response.data);\n            const hospitalArray = responseHos.data || [];\n            const altStructure = responseAlt.data || [];\n            let i = 0;\n            for (i = 0; i <= 10; i++) {\n              altStructure[i].filtered = true;\n            }\n            const tenFirstaltStructure = altStructure.slice(0, 10);\n            // console.log(altStructure);\n            // console.log(newstructureArray);\n\n            const filteredHospiatls = hospitalArray.filter(el => {\n              el.isHospital = true;\n              if (el.availablePoles) {\n                //filtered is the object that allow us to know if the hospital is or not in the proposition list\n                el.filtered = el.availablePoles.some(\n                  pole =>\n                    pole.pathology === neededSpecialist &&\n                    (pole.patientType === patientType ||\n                      pole.patientType === \"Universel\")\n                );\n\n                return el.filtered;\n              }\n              return \"\";\n            });\n\n            const newstructureArray = tenFirstaltStructure\n              .concat(filteredHospiatls)\n              .slice(0, 20);\n\n            const noDurationList = newstructureArray.filter(oneStructure => {\n              return !oneStructure.duration;\n            });\n            const mapboxArray = noDurationList.map(el =>\n              getDistanceDuration(\n                userLocation.longitude,\n                userLocation.latitude,\n                el.longitude,\n                el.latitude\n              ).then(response => {\n                el.duration = Math.round(\n                  response.data.durations[0][0] / 60 +\n                    waitingTimeAccordingToHour(el)\n                );\n              })\n            );\n            axios\n              .all(mapboxArray)\n              .then(() => {\n                newstructureArray.sort(function(a, b) {\n                  return a.duration - b.duration;\n                });\n                console.log(newstructureArray);\n                this.setState({ newstructureArray });\n                //    this.setState({ oneStructureDetail: newstructureArray[0] });\n              })\n              .catch(errorHandler);\n\n            const structureArray = hospitalArray.concat(altStructure);\n            // console.log(structureArray);\n\n            this.setState({\n              structureArray,\n              hospitalArray,\n              altStructure,\n              newstructureArray\n            });\n          })\n        )\n        .catch(() => {\n          Swal.fire({\n            position: \"center\",\n            type: \"info\",\n            title:\n              \"Merci de remplir le questionnaire pour afficher des résultats pertinents.\",\n            showConfirmButton: true,\n            timer: 4500\n          });\n          this.setState({ isSubmitSuccessful: true });\n        });\n    }\n  }\n  showStructureDetail = oneStructureDetail => {\n    // https://www.freecodecamp.org/forum/t/react-why-onclick-property-function-triggers-without-click/114180\n    console.log(oneStructureDetail);\n    this.setState({ oneStructureDetail });\n  };\n\n  emptyOneStructure = () => {\n    this.setState({ oneStructureDetail: null });\n  };\n\n  render() {\n    console.log(this.state);\n    const {\n      newstructureArray,\n      open,\n      redirect,\n      oneStructureDetail\n    } = this.state;\n    return redirect ? (\n      // returning the <Redirect /> ONLY works inside RENDER\n      <Redirect to=\"/\" />\n    ) : (\n      <Row className=\"no-gutters\">\n        {/* list of relevant results with a toggle button */}\n        <Col\n          sm={{ span: 12, order: 2 }}\n          md={{ span: 4, order: 2 }}\n          id=\"map-filter\"\n        >\n          {!oneStructureDetail ? (\n            <div id=\"accordion\">\n              <div className=\"card border-bottom-0\">\n                <div className=\"card-header border-bottom-0\" id=\"headingOne\">\n                  {open ? (\n                    <Button\n                      variant=\"primary\"\n                      size=\"lg\"\n                      block\n                      className=\"d-md-none\"\n                      onClick={() => this.setState({ open: !open })}\n                      aria-controls=\"example-collapse-text\"\n                      aria-expanded={open}\n                    >\n                      <p className=\"clollapsBtnText\">Carte seulement</p>\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"lg\"\n                      block\n                      className=\"d-md-none\"\n                      onClick={() => this.setState({ open: !open })}\n                      aria-controls=\"example-collapse-text\"\n                      aria-expanded={open}\n                    >\n                      <p className=\"clollapsBtnText\">Carte et propositions</p>\n                    </Button>\n                  )}\n                </div>\n                <FilterBar\n                  updatePatient={event => this.props.updatePatient(event)}\n                />\n                <Collapse\n                  in={this.state.open}\n                  className=\"dimension\"\n                  id=\"example-collapse-text\"\n                >\n                  {/* this table display the structure propostions into the collaps button list */}\n                  <div aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <table className=\"table table-sm table-fixed\">\n                      <thead>\n                        <tr>\n                          <th className=\"font-weight-normal w-50\">\n                            Pertinence\n                          </th>\n                          <th className=\"text-center font-weight-normal\">\n                            <span>\n                              Délai\n                              <i className=\"fas fa-walking fa-sm ml-2\" />\n                            </span>\n                          </th>\n                          <th className=\"text-center font-weight-normal\">\n                            Details\n                            <i className=\"fas fa-info fa-xs mb-1 ml-2\" />\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody id=\"filtered-results\">\n                        {newstructureArray.map((oneStructure, index) => {\n                          return (\n                            <tr\n                              key={index}\n                              className=\"border border-black border-bottom\"\n                            >\n                              <td>\n                                {/* icon and name and number */}\n                                <ul className=\"list-group list-group-flush\">\n                                  <li className=\"list-group-item border-0\">\n                                    <div className=\"row d-flex align-items-center\">\n                                      <div className=\"col-lg-2\">\n                                        {!oneStructure.shortname ? (\n                                          <span className=\"fa-stack fa-2x small\">\n                                            <i className=\"fas fa-square fa-stack-2x text-danger\" />\n                                            <i className=\"fas fa-stack-1x text-structure text-white\">\n                                              H\n                                            </i>\n                                          </span>\n                                        ) : (\n                                          <span className=\"fa-stack fa-2x small mr-2\">\n                                            <i className=\"fas fa-circle fa-stack-2x text-primary\" />\n                                            <i className=\"fas fa-stack-1x text-white text-structure\">\n                                              C\n                                            </i>\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div className=\"col-lg-9\">\n                                        <span className=\"text-muted\">\n                                          {oneStructure.name} <br />\n                                          <a\n                                            href=\"tel:+33{popupInfo.phoneNumber}\"\n                                            className=\"small text-muted\"\n                                          >\n                                            {oneStructure.phoneNumber}\n                                          </a>\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </li>\n                                </ul>\n                              </td>\n                              {/* ETA by walking */}\n                              <td className=\"text-center align-middle\">\n                                <ul className=\"list-group list-unstyled\">\n                                  <li>\n                                    <span className=\"badge badge-light\">\n                                      {oneStructure.duration} min\n                                    </span>\n                                  </li>\n                                </ul>\n                              </td>\n                              {/* See details link */}\n                              <td className=\"text-center align-middle\">\n                                <Link\n                                  to=\"#0\"\n                                  onClick={this.showStructureDetail.bind(\n                                    this,\n                                    oneStructure\n                                  )}\n                                  className=\"text-muted\"\n                                >\n                                  voir\n                                </Link>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </div>\n                </Collapse>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div id=\"accordion\">\n                <div className=\"card border-bottom-0\">\n                  <div\n                    className=\"card-header border-bottom-0\"\n                    id=\"headingOne\"\n                  />\n                </div>\n              </div>\n              <StructureDetail\n                structureItem={this.state.oneStructureDetail}\n                emptyOneStructure={this.emptyOneStructure}\n              />\n            </>\n          )}\n        </Col>\n\n        {/* map container receiving data and user location as props */}\n        <Col sm={{ span: 12, order: 2 }} md={{ span: 8, order: 2 }}>\n          <SingleMap\n            hospitalArray={this.state.hospitalArray}\n            altStructure={this.state.altStructure}\n            newstructureArray={this.state.newstructureArray}\n            structureArray={this.state.structureArray}\n            userLocation={this.props.userLocation}\n          />\n        </Col>\n        <SpeedDial />\n      </Row>\n    );\n  }\n}\n\nexport default MapWrapper;\n","import React, { Component } from \"react\";\nimport \"./NotFound.css\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section className=\"NotFound\">\n        <h2>404 Not Found</h2>\n        <p>The page you are looking for is not available.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n//import Col from \"react-bootstrap/Col\";\n//import Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./SpecialtyCard.scss\";\n//import Container from \"react-bootstrap/Container\";\n\nclass SpecialtyCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isVisible: false };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isVisible: !this.state.isVisible\n    });\n  }\n\n  clickHandler(event) {\n    this.props.updatePatient(event);\n    this.props.nextStep();\n  }\n  render() {\n    console.log(this.props.index);\n    return (\n      <div className=\"card flex-row m-3 bg-white\" key={this.props.index}>\n        <div className=\"col-4 card-header bg-light p-2\">\n          <img\n            src={this.props.picture}\n            alt={this.props.bodyPart}\n            className=\"picto d-block mx-auto\"\n          />\n        </div>\n        <div className=\" col-8 w-100 px-2 d-flex flex-column justify-content-between\">\n          <div className=\"w-100 card-titlepx-2 pt-2 pb-0 mb-0 text-dark font-weight-light\">\n            <h5 className=\"font-weight-light m-0\">{this.props.bodyPart}</h5>\n          </div>\n          <div className=\"w-100 d-flex justify-content-between\">\n            <a\n              className=\"btn\"\n              data-toggle=\"collapse\"\n              href={\"#B\" + this.props.index}\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseExample\"\n            >\n              <i className=\"far fa-question-circle\" />\n            </a>\n            <Button\n              variant=\"primary\"\n              className=\"mt-2 btn-sm w-50 \"\n              onClick={event => this.clickHandler(event)}\n              name=\"neededSpecialist\"\n              value={this.props.neededSpecialist}\n            >\n              Valider\n            </Button>\n          </div>\n          <div className=\"w-100\">\n            <div className=\"collapse\" id={\"B\" + this.props.index}>\n              <div className=\"small py-2\">{this.props.infoText}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SpecialtyCard;\n","import React, { Component } from \"react\";\nimport posed from \"react-pose\";\nimport { Link } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\n// child card component\nimport SpecialtyCard from \"./SpecialtyCard\";\n// images\nconst generale = \"/images/pictos/medical.svg\";\nconst dent = \"/images/pictos/dentaire.svg\";\nconst uterus = \"/images/pictos/gynecologie.svg\";\nconst main = \"/images/pictos/plaie_de_main.svg\";\nconst oeil = \"/images/pictos/ophtalmologie.svg\";\nconst orl = \"/images/pictos/ORL2.png\";\nconst anus = \"/images/pictos/anus.svg\";\nconst psychiatrie = \"/images/pictos/psychiatrie.svg\";\n//const ventre = \"/images/pictos/ventre.svg\";\n//const torso = \"/images/pictos/torso.svg\";\n//const brulure = \"/images/pictos/brulure.svg\";\n//const fracture = \"/images/pictos/fracture.svg\";\n//const gorge = \"/images/pictos/gorge.svg\";\n//const grossesse = \"/images/pictos/grossesse.svg\";\n\nconst Ul = posed.ul({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1400 },\n    x: 0,\n    delayChildren: 0,\n    staggerChildren: 300,\n    opacity: 1,\n    delay: 100\n  },\n  closed: {\n    x: 20,\n    delay: 300,\n    opacity: 0\n  }\n});\n\nconst Li = posed.li({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 400 }\n});\n\nclass PathologyQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  // update user search filters\n  clickHandler(event) {\n    this.props.updatePatient(event);\n  }\n\n  // show next step and lift choice up to form step counter\n  userChoice(event) {\n    this.props.nextStep(event);\n    this.props.onFormStep(this.props.totalSteps, this.props.currentStep);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (!oldProps.isActive && this.props.isActive) {\n      this.setState({ isOpen: true });\n    }\n  }\n\n  // card list of specialities that helps to filter search results of hospitals and structures with corresponding services\n  render() {\n    const { isOpen } = this.state;\n\n    const specialtyList = [\n      {\n        bodyPart: \"Medecine générale\",\n        neededSpecialist: \"Générales\",\n        image: generale,\n        infoTitle: \"\",\n        infoText: \"Pour tout besoin médical.\"\n      },\n      {\n        bodyPart: \"Problême à l'oeil\",\n        neededSpecialist: \"Ophtalmologiques\",\n        image: oeil,\n        infoTitle: \"\",\n        infoText:\n          \"Il s'agit d'un trouble de la vision ou d'un autre problème à l'oeil ou à la paupiere.\"\n      },\n      {\n        bodyPart: \"Trouble oto-rhino-laryngologique\",\n        neededSpecialist: \"Oto-rhino-laryngologiques\",\n        image: orl,\n        infoTitle: \"\",\n        infoText:\n          \"Il s'agit d'un problème à l'oreille, au nez, ou dans la gorge.\"\n      },\n      {\n        bodyPart: \"Problême dentaire\",\n        neededSpecialist: \"Dentaires\",\n        image: dent,\n        infoTitle: \"\",\n        infoText: \"Pour toute douleur à la dent ou aux gencives. \"\n      },\n\n      {\n        bodyPart: \"Plaie à la main \",\n        neededSpecialist: \"Plaies de la main\",\n        image: main,\n        infoTitle: \"\",\n        infoText:\n          \"Il s'agit d'une plaie à la main ou sur un ou plusieurs doigts.\"\n      },\n\n      {\n        bodyPart: \"Gynécologie-obstetrie\",\n        neededSpecialist: \"Gynéco-obstétricales\",\n        image: uterus,\n        infoTitle: \"\",\n        infoText:\n          \"Il s'agit d'un problème gynécologique ou lié à une grossesse en cours ou suspectée.\"\n      },\n\n      {\n        bodyPart: \"Problême au rectum\",\n        neededSpecialist: \"Proctology\",\n        image: anus,\n        infoTitle: \"\",\n        infoText:\n          \"Il s'agit d'un problème identifié au niveau de l'anus ou du rectum.\"\n      },\n      {\n        bodyPart: \"Psychiatrie\",\n        neededSpecialist: \"Psychiatriques\",\n        image: psychiatrie,\n        infoTitle: \"\",\n        infoText:\n          \"Il s'agit d'un probleme d'ordre psychologique ou psychiatrique.\"\n      }\n    ];\n    return (\n      <Container id=\"PathologyCards\">\n        {/* quuestion */}\n        <Row>\n          <span className=\"float-left pl-3\">\n            <Link\n              to=\"#0\"\n              onClick={this.props.previousStep}\n              className=\"text-secondary\"\n            >\n              <i className=\"fas fa-arrow-left mx-2\" />\n              Retour\n            </Link>\n          </span>\n        </Row>\n\n        {/* card list */}\n        <Row className=\"d-flex justify-content-center\">\n          <Col xs={12} sm={12} md={9} lg={6}>\n            <Ul pose={isOpen ? \"open\" : \"closed\"} className=\"list-unstyled\">\n              <div>\n                <Row>\n                  <p className=\"lead text-center w-100 mb-1\">\n                    Quel est le problême?\n                  </p>\n                </Row>\n                <Row>\n                  <span className=\"text-center px-4 small\">\n                    Certains problêmes necessitent une attention particulière,\n                    si le vôtre n'en fait pas partie, veuillez choisir médecine\n                    générale.\n                  </span>\n                </Row>\n              </div>\n              {specialtyList.map((oneSpecialty, index) => {\n                return (\n                  <Li key={index} className=\"item\">\n                    <SpecialtyCard\n                      // card specs\n                      bodyPart={oneSpecialty.bodyPart}\n                      picture={oneSpecialty.image}\n                      neededSpecialist={oneSpecialty.neededSpecialist}\n                      infoText={oneSpecialty.infoText}\n                      index={index}\n                      // update filter and next step in form events\n                      updatePatient={event => this.props.updatePatient(event)}\n                      nextStep={event => this.userChoice(event)}\n                    />\n                  </Li>\n                );\n              })}\n            </Ul>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PathologyQuestions;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./AdultQuestion.scss\";\nimport posed from \"react-pose\";\n\nconst Section = posed.section({\n  open: {\n    transition: { ease: \"easeInOut\", duration: 1400 },\n    x: 0,\n    delayChildren: 0,\n    staggerChildren: 0,\n    opacity: 1,\n    delay: 0\n  },\n  closed: {\n    x: 0,\n    delay: 0,\n    opacity: 0\n  }\n});\n\nconst Div = posed.div({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 20 }\n});\n\nconst P = posed.p({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 400 }\n});\n\nconst ButtonWrap = posed.div({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 800 }\n});\n\nclass AdultQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  componentDidMount() {\n    this.setState({ isOpen: true });\n  }\n\n  clickHandler(event) {\n    this.props.nextStep();\n    this.props.updatePatient(event);\n    this.props.onFormStep(this.props.totalSteps, this.props.currentStep);\n  }\n  render() {\n    const { isOpen } = this.state;\n\n    return (\n      <Section pose={isOpen ? \"open\" : \"closed\"} className=\"text-center\">\n        <Div className=\"bg-toy\" />\n        <P className=\"lead my-4\">S’agit-il d’un enfant ou d’un adulte?</P>\n\n        <ButtonWrap>\n          <Button\n            variant=\"primary\"\n            onClick={event => this.clickHandler(event)}\n            name=\"patientAdult\"\n            value=\"Enfants\"\n          >\n            Enfant\n          </Button>\n\n          <Button\n            variant=\"secondary\"\n            onClick={event => this.clickHandler(event)}\n            name=\"patientAdult\"\n            value=\"Adultes\"\n            className=\"mx-3\"\n          >\n            Adulte\n          </Button>\n        </ButtonWrap>\n      </Section>\n    );\n  }\n}\n\nexport default AdultQuestion;\n","import React, { Component } from \"react\";\nimport \"./QuestionsIndicator.scss\";\n\nfunction renderDots(dots, currentActiveDot) {\n  // number to array to be able to use map()\n  let pills = Array.apply(null, { length: dots }).map((dot, index) => (\n    <span\n      key={index}\n      // determine if dot must be set to .active class\n      className={index === currentActiveDot ? \" dot active\" : \"dot\"}\n    >\n      •\n    </span>\n  ));\n  return pills;\n}\nclass Questions extends Component {\n  render() {\n    const { numberOfSteps, currentStep } = this.props;\n    return <section>{renderDots(numberOfSteps, currentStep)}</section>;\n  }\n}\n\nexport default Questions;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./LocationSearchInput.scss\";\n\n// do not remove the line below please\n/* global google */\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUserPosition: {\n        latitude: null,\n        longitude: null\n      },\n      addressInputValue: \"\",\n      isLoadingCoordinates: false,\n      toMapResults: false,\n      validated: false\n    };\n\n    // binds for events (needs cleaning)\n    this.autocompleteInput = React.createRef();\n    this.autocomplete = null;\n    this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n    this.getUserLocationBrowser = this.getUserLocationBrowser.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.goToResult = this.goToResult.bind(this);\n  }\n\n  // load Google API for autocompletion on mount\n  componentDidMount() {\n    // bound the search to ile de france for now\n    var southWest = new google.maps.LatLng(48.1203, 1.4467);\n    var northEast = new google.maps.LatLng(49.2413, 3.5585);\n    var ileDeFrance = new google.maps.LatLngBounds(southWest, northEast);\n\n    // monitor form and change result on event\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.autocompleteInput.current,\n      {\n        bounds: ileDeFrance,\n        types: [\"geocode\"],\n        componentRestrictions: { country: \"fr\" }\n      }\n    );\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceChanged);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  // update state if any change on form\n  handlePlaceChanged() {\n    this.setState({\n      isLoadingCoordinates: true\n    });\n    const place = this.autocomplete.getPlace();\n    const longitude = place.geometry.viewport.ga.l;\n    const latitude = place.geometry.viewport.ma.l;\n\n    this.setState({\n      currentUserPosition: {\n        latitude: latitude,\n        longitude: longitude\n      },\n      isLoadingCoordinates: false\n    });\n\n    // TODO lifting state up top\n    this.props.onGeolocation(latitude, longitude);\n\n    // redirect user to map with filtered results\n    this.goToResult();\n  }\n\n  // input validation\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n  }\n  // get user coords with HTML5 browser feature on click, redirect when filled\n  getUserLocationBrowser() {\n    const { currentUserPosition, isLoadingCoordinates } = this.state;\n\n    // triggered only if user is not located\n    if (!currentUserPosition.latitude) {\n      // loading icon\n      this.toggleSearchCoordinates(isLoadingCoordinates);\n\n      const location = window.navigator && window.navigator.geolocation;\n      if (location) {\n        location.getCurrentPosition(\n          position => {\n            // update state with results\n            const { isLoadingCoordinates } = this.state;\n            this.toggleSearchCoordinates(isLoadingCoordinates);\n\n            // reverse geocode\n            this.reverseGeocode(\n              position.coords.latitude,\n              position.coords.longitude\n            );\n            // TODO lifting state up here too\n            this.props.onGeolocation(\n              position.coords.latitude,\n              position.coords.longitude\n            );\n\n            // redirect user to map with filtered results\n            this.goToResult();\n          },\n          error => {\n            this.setState({\n              latitude: \"err-latitude\",\n              longitude: \"err-longitude\"\n            });\n            console.log(\"Cannot find you err..:\", error);\n          }\n        );\n      }\n    }\n  }\n\n  // toggle loading icon\n  toggleSearchCoordinates(currentValue) {\n    this.setState({ isLoadingCoordinates: !currentValue });\n  }\n\n  // convert coordinates to address\n  reverseGeocode(latitude, longitude) {\n    let params = {\n      key: process.env.REACT_APP_GOOGLE_MAPS_JS,\n      latlng: `${latitude},${longitude}`\n    };\n\n    // do google maps js API query\n    return axios\n      .get(\n        `https://maps.googleapis.com/maps/api/geocode/json?key=${\n          params.key\n        }&latlng=${params.latlng}`\n      )\n      .then(response => {\n        // get the result into the form so user has a feedbakc\n        this.setState({\n          addressInputValue: response.data.results[0].formatted_address\n        });\n\n        // TODO method call to add an user marker here\n      });\n    //end\n  }\n\n  // redirect to map when address found\n  goToResult() {\n    this.setState({ toMapResults: true });\n  }\n\n  render() {\n    // form validation to prevent submission if empty\n    // see bootstrap react docs\n    const { validated } = this.state;\n\n    // redirect to map when address found\n    if (this.state.toMapResults === true) {\n      return <Redirect to=\"/map\" />;\n    }\n\n    return (\n      <Form\n        noValidate\n        validated={validated}\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                this.getUserLocationBrowser();\n              }}\n            >\n              <i className=\"fas fa-map-marker-alt\" />\n            </Button>\n          </div>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Où êtes vous?\"\n            name=\"addressInputValue\"\n            value={this.state.addressInputValue}\n            onChange={this.handleChange}\n            id=\"autocomplete\"\n            ref={this.autocompleteInput}\n            required\n          />\n\n          <div className=\"input-group-append\">\n            {this.state.isLoadingCoordinates ? (\n              <Button variant=\"info\" onClick={this.goToResult}>\n                <i className=\"fas fa-circle-notch fa-spin\" />\n              </Button>\n            ) : (\n              <Button type=\"submit\" variant=\"outline-secondary\">\n                <i className=\"fas fa-search\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default LocationSearchInput;\n","import React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport LocationSearchInput from \"./LocationSearchInput.js\";\nimport \"./UserLocalisation.scss\";\nimport posed from \"react-pose\";\nimport { Link } from \"react-router-dom\";\n\nconst Section = posed.section({\n  open: {\n    transition: { ease: \"easeInOut\", duration: 1400 },\n    x: 0,\n    delayChildren: 0,\n    staggerChildren: 0,\n    opacity: 1,\n    delay: 0\n  },\n  closed: {\n    x: 0,\n    delay: 0,\n    opacity: 0\n  }\n});\n\nconst Div = posed.div({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 20 }\n});\n\nconst P = posed.p({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 400 }\n});\n\nconst Label = posed.label({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 1500 }\n});\n\nconst DivSearchInput = posed.div({\n  open: {\n    transition: { ease: \"easeOut\", duration: 1000 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 800 }\n});\n\nclass UserLocalisation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  componentDidUpdate(oldProps) {\n    if (!oldProps.isActive && this.props.isActive) {\n      this.setState({ isOpen: true });\n    }\n  }\n  render() {\n    const { isOpen } = this.state;\n    return (\n      <Section\n        pose={isOpen ? \"open\" : \"closed\"}\n        className=\"text-center container-fluid\"\n      >\n        <Row>\n          <span className=\"float-left pl-3\">\n            <Link\n              to=\"#0\"\n              onClick={this.props.previousStep}\n              className=\"text-secondary\"\n            >\n              <i className=\"fas fa-arrow-left mx-2\" />\n              Retour\n            </Link>\n          </span>\n        </Row>\n        <Div className=\"bg-directions m-4\" />\n        <P className=\"lead my-4\">Trouvez des soins proches de vous.</P>\n        <Row>\n          <Col\n            sm={{ span: 12 }}\n            className=\" px-5 d-flex justify-content-center\"\n          >\n            <DivSearchInput className=\"col-md-6 col-xs-12\">\n              <Col className=\"bg-light shadow-sm border rounded p-2 \">\n                <LocationSearchInput\n                  onGeolocation={this.props.onGeolocation}\n                  nextStep={event => this.props.nextStep(event)}\n                />\n              </Col>\n            </DivSearchInput>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={{ span: 12 }} className=\"d-flex justify-content-center\">\n            {/* prescription checkbox */}\n            <Form className=\"p-2 small text-left\">\n              <div key=\"hint-checkbox\" className=\"hint-checkbox m-2 px-2\">\n                <Label>\n                  <Form.Check\n                    type=\"checkbox\"\n                    id=\"prescription\"\n                    className=\"d-inline mr-2\"\n                  />\n                  <span className=\"text-muted\">\n                    C'est pour renouveller une ordonnance ?{\" \"}\n                    <span className=\"text-secondary\">Cliquez ici !</span>\n                  </span>\n                </Label>\n              </div>\n            </Form>\n          </Col>\n        </Row>\n      </Section>\n    );\n  }\n}\n\nexport default UserLocalisation;\n","import React, { Component } from \"react\";\n\n// content\nimport StepWizard from \"react-step-wizard\";\nimport PathologyQuestions from \"./PathologyQuestions\";\nimport AdultQuestion from \"./AdultQuestion\";\nimport QuestionsIndicator from \"./QuestionsIndicator\";\nimport UserLocalisation from \"./UserLocalisation.js\";\nimport SpeedDial from \"./SpeedDial\";\n//import { Route } from \"react-router-dom\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // works, hardcoded to refactor later\n      numberOfSteps: 3,\n      currentStep: 0\n    };\n  }\n\n  updateFormIndicator(numberOfSteps, currentStep) {\n    this.setState({\n      numberOfSteps,\n      currentStep\n    });\n  }\n  render() {\n    const { numberOfSteps, currentStep } = this.state;\n    return (\n      <>\n        <section className=\"d-flex justify-content-center\">\n          <QuestionsIndicator\n            numberOfSteps={numberOfSteps}\n            currentStep={currentStep}\n          />\n        </section>\n\n        <StepWizard onStepChange={this.handleStep} initialStep={1}>\n          <AdultQuestion\n            // adding anchor to url\n            hashKey={\"age\"}\n            // update user search filters and form step counter\n            updatePatient={event => this.props.updatePatient(event)}\n            onFormStep={(numberOfSteps, currentStep) =>\n              this.updateFormIndicator(numberOfSteps, currentStep)\n            }\n          />\n\n          <PathologyQuestions\n            hashKey={\"service\"}\n            updatePatient={event => this.props.updatePatient(event)}\n            onFormStep={(numberOfSteps, currentStep) =>\n              this.updateFormIndicator(numberOfSteps, currentStep)\n            }\n          />\n\n          <UserLocalisation\n            hashKey={\"position\"}\n            onGeolocation={this.props.onGeolocation}\n          />\n        </StepWizard>\n        <SpeedDial />\n      </>\n    );\n  }\n}\n\nexport default Questions;\n","import React, { Component } from \"react\";\n\nimport \"./SignUpPage.css\";\nimport { postSignUp } from \"../api.js\";\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    postSignUp(this.state).then(response => {\n      console.log(\"sign up result\", response.data);\n      // use the method sent an a prop by app.js to update current user\n      this.props.signupSuccess(response.data);\n    });\n  }\n  render() {\n    const { currentUser } = this.props;\n\n    return (\n      <section className=\"SignupPage\">\n        {currentUser ? (\n          <div class=\"card bg-light\">\n            <article class=\"card-body mx-auto\">\n              <h4 class=\"card-title mt-3 text-center\">\n                Your account has been created\n              </h4>\n            </article>\n          </div>\n        ) : (\n          <div class=\"card bg-light\">\n            <article class=\"card-body mx-auto\">\n              <h4 class=\"card-title mt-3 text-center\">Create Account</h4>\n              <p class=\"text-center\">Get started with your pro account </p>\n              <br />\n              <form onSubmit={event => this.handleSubmit(event)}>\n                <div class=\"form-group input-group\">\n                  <div class=\"input-group-prepend\" />\n\n                  <div class=\"form-group input-group\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\">\n                        {\" \"}\n                        <i class=\"fa fa-envelope\" />{\" \"}\n                      </span>\n                    </div>\n                    <input\n                      onChange={event => {\n                        this.genericOnChange(event);\n                      }}\n                      value={this.state.email}\n                      name=\"username\"\n                      class=\"form-control\"\n                      placeholder=\"Email address\"\n                      type=\"email\"\n                    />\n                  </div>\n\n                  <div class=\"form-group input-group\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\">\n                        {\" \"}\n                        <i class=\"fa fa-building\" />{\" \"}\n                      </span>\n                    </div>\n                    <select class=\"form-control\">\n                      <option selected=\"\"> Select role type</option>\n                      <option>Fleet Manager</option>\n                      <option>Administrative</option>\n                      <option>Nursing/Medical</option>\n                    </select>\n                  </div>\n\n                  <div class=\"form-group input-group\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\">\n                        {\" \"}\n                        <i class=\"fa fa-lock\" />{\" \"}\n                      </span>\n                    </div>\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"Create password\"\n                      type=\"password\"\n                      name=\"password\"\n                    />\n                  </div>\n\n                  <div class=\"form-group input-group\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\">\n                        {\" \"}\n                        <i class=\"fa fa-lock\" />{\" \"}\n                      </span>\n                    </div>\n                    <input\n                      onChange={event => {\n                        this.genericOnChange(event);\n                      }}\n                      value={this.state.password}\n                      s\n                      class=\"form-control\"\n                      placeholder=\"Repeat password\"\n                      type=\"password\"\n                      name=\"password\"\n                    />\n                  </div>\n\n                  <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                      {\" \"}\n                      Create Account{\" \"}\n                    </button>\n                  </div>\n                </div>\n\n                <p class=\"text-center\">\n                  Have an account? <a href=\"/login\">Log In</a>{\" \"}\n                </p>\n              </form>\n            </article>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./LoginPage.css\";\nimport { postLogin } from \"../api\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  handleSubmit(event) {\n    //submit login info to the backend\n    event.preventDefault();\n    postLogin(this.state).then(response => {\n      console.log(\"log in\", response.data);\n      // use the method sent an a prop by app.js to update current user\n      this.props.loginSuccess(response.data);\n    });\n  }\n\n  render() {\n    return this.props.currentUser ? (\n      <Redirect to=\"/dashboard\" />\n    ) : (\n      <section className=\"LoginPage\">\n        <section className=\"bg-light\">\n          <div className=\"container\">\n            <div className=\"col-lg-12 pt-4\">\n              <h1 className=\"pt-4\">\n                <span className=\"text-primary display-4 \">Med</span>\n                <span className=\"text-muted display-4 \">Direct</span>\n                <span className=\"text-info small\">&nbsp;Pro</span>\n              </h1>\n            </div>\n            <div className=\"row\">\n              {/* illustration */}\n              <div className=\"col-md-8  order-first order-md-5 mt-5\">\n                <img\n                  src=\"/images/illustrations/undraw_authentication_fsn5.svg\"\n                  alt=\"Illustration calme et apaisante de deux docteurs dans un hopital\"\n                  className=\"img-fluid\"\n                />\n              </div>\n              {/* speech and CTA */}\n              <div className=\"col-lg-4 py-4 pr-0\">\n                <form\n                  onSubmit={event => this.handleSubmit(event)}\n                  className=\"text-center border border-light p-5\"\n                >\n                  <p classame=\"h4 mb-4\">Portal Log In</p>\n\n                  <input\n                    type=\"username\"\n                    name=\"username\"\n                    className=\"form-control mb-4\"\n                    aria-describedby=\"emailHelp\"\n                    onChange={event => {\n                      this.genericOnChange(event);\n                    }}\n                    value={this.state.username || \"\"}\n                    placeholder=\"E-mail \"\n                  />\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control mb-4\"\n                    aria-describedby=\"passwordHelp\"\n                    onChange={event => {\n                      this.genericOnChange(event);\n                    }}\n                    value={this.state.password || \"\"}\n                    placeholder=\"Password \"\n                  />\n                  <div className=\"d-flex justify-content-around\">\n                    <div className=\"custom-control custom-checkbox\">\n                      <input type=\"checkbox\" className=\"custom-control-input\" />\n                      <label className=\"custom-control-label\">\n                        Remember me\n                      </label>\n                    </div>\n                  </div>\n                  <button className=\"btn btn-info btn-block my-4\" type=\"submit\">\n                    Sign in\n                  </button>\n\n                  <p>\n                    Not a member? &nbsp;\n                    <a href=\"/signup\">Create a profile</a>\n                  </p>\n                </form>\n              </div>\n            </div>\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport {geolocated} from 'react-geolocated';\n\nclass Demo extends React.Component {\n  render() {\n    return !this.props.isGeolocationAvailable\n      ? <div>Your browser does not support Geolocation</div>\n      : !this.props.isGeolocationEnabled\n        ? <div>Geolocation is not enabled</div>\n        : this.props.coords\n          ? <table>\n            <tbody>\n              <tr><td>latitude</td><td>{this.props.coords.latitude}</td></tr>\n              <tr><td>longitude</td><td>{this.props.coords.longitude}</td></tr>\n              <tr><td>altitude</td><td>{this.props.coords.altitude}</td></tr>\n              <tr><td>heading</td><td>{this.props.coords.heading}</td></tr>\n              <tr><td>speed</td><td>{this.props.coords.speed}</td></tr>\n            </tbody>\n          </table>\n          : <div>Getting the location data&hellip; </div>;\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Demo);\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n//import SingleMap from \"./SingleMap.js\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n//import Swal from \"sweetalert2\";\n//import { Redirect } from \"react-router\";\nimport MapGL from \"react-map-gl\";\nimport \"./Structuredetails.scss\";\nimport { getStructureDetails } from \"../api.js\";\n//import { Link } from \"react-router-dom\";\n\nclass Structuredetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      viewport: {\n        latitude: 48.85341,\n        longitude: 2.3488,\n        zoom: 10,\n        pitch: 45,\n        bearing: -17.6\n      },\n      structureItem: {},\n      times: \"\",\n      redirect: false\n    };\n  }\n  componentDidMount() {\n    // get path params from React Router props\n    const { params } = this.props.match;\n    // use the ID in path params to get the details from the backend API\n    getStructureDetails(params.structureId).then(response => {\n      // ALWAYS console.log() response.data to see what the API gave you\n      console.log(\"Structure details\", response.data);\n      // save the JSON data from the API into the state\n      const structureItem = response.data;\n\n      let d = new Date();\n      let n = d.getDay();\n      console.log(n);\n      console.log(structureItem.sunday);\n      let times = \"\";\n      if (\n        structureItem.monday ||\n        structureItem.tuesday ||\n        structureItem.wednesday ||\n        structureItem.thursday ||\n        structureItem.friday ||\n        structureItem.saturday ||\n        structureItem.sunday\n      ) {\n        switch (n) {\n        case 1:\n          times = structureItem.monday;\n          break;\n        case 2:\n          times = structureItem.tuesday;\n          break;\n        case 3:\n          times = structureItem.wednesday;\n          break;\n        case 4:\n          times = structureItem.thursday;\n          break;\n        case 5:\n          times = structureItem.friday;\n          break;\n        case 6:\n          times = structureItem.saturday;\n          break;\n        case 7:\n          times = structureItem.sunday;\n          break;\n        default:\n          console.log(\"Sorry, we did not find time\");\n        }\n        if (times === \"\") {\n          times = \"fermé\";\n        }\n      } else {\n        times = \"Ouvert 24h/24 - 7j/7\";\n      }\n      console.log(times);\n\n      this.setState({ structureItem, times });\n    });\n  }\n\n  render() {\n    const { open, structureItem, times } = this.state;\n    const { viewport } = this.state;\n    const MAPBOX_KEY = process.env.REACT_APP_MAPBOX_TOKEN;\n\n    return (\n      <Row className=\"no-gutters\">\n        {/* list of relevant results with a toggle button */}\n        <Col\n          sm={{ span: 12, order: 2 }}\n          md={{ span: 4, order: 2 }}\n          id=\"map-filter\"\n        >\n          <div id=\"accordion\" />\n          <div className=\"card border-bottom-0\">\n            <div className=\"card-header\" id=\"headingOne\">\n              {open ? (\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  block\n                  className=\"d-md-none\"\n                  onClick={() => this.setState({ open: !open })}\n                  aria-controls=\"example-collapse-text\"\n                  aria-expanded={open}\n                >\n                  <p className=\"clollapsBtnText\">Carte seulement</p>\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"lg\"\n                  block\n                  className=\"d-md-none\"\n                  onClick={() => this.setState({ open: !open })}\n                  aria-controls=\"example-collapse-text\"\n                  aria-expanded={open}\n                >\n                  <p className=\"clollapsBtnText\">Carte et propositions</p>\n                </Button>\n              )}\n              <LinkContainer to=\"/map\">\n                <Button variant=\"secondary\" size=\"sm\" block className=\"back\">\n                  <i className=\"fas fa-arrow-left\" /> Retour\n                </Button>\n              </LinkContainer>\n            </div>\n            <Collapse\n              in={this.state.open}\n              className=\"dim\"\n              id=\"example-collapse-text\"\n            >\n              <div aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                <Card>\n                  <Card.Body>\n                    <Card.Title>{structureItem.name}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                      {structureItem.type}\n                    </Card.Subtitle>\n                    <address className=\"d-block p-2 bg-light\">\n                      <Card.Text>Adresse et horaires : {times}</Card.Text>\n                      <p className=\"text-muted\">\n                        {structureItem.streetNumber} {structureItem.roadType}{\" \"}\n                        {structureItem.streetName} - {structureItem.city},{\" \"}\n                        {structureItem.zipCode}\n                      </p>\n                      <Card.Link href=\"tel:+33{structureItem.phoneNumber}\">\n                        {structureItem.phoneNumber}\n                      </Card.Link>\n                    </address>\n                  </Card.Body>\n                </Card>\n              </div>\n            </Collapse>\n          </div>\n        </Col>\n\n        {/* map container receiving data and user location as props */}\n        <Col sm={{ span: 12, order: 2 }} md={{ span: 8, order: 2 }}>\n          <MapGL\n            {...viewport}\n            mapboxApiAccessToken={MAPBOX_KEY}\n            mapStyle=\"mapbox://styles/project3ironhack/cjsk4xibk5rjh1fmqo9k31hym\"\n            width=\"100%\"\n            height={window.innerHeight - 56}\n            // 56 to substract navbar height of window size so the map is full height\n            onViewportChange={this._onViewportChange}\n          >\n            {/* user marker  */}\n            {/* {this.renderUserMarker(userLocation)} */}\n            {/* calling method below with Marker */}\n            {/* {this.renderMapAndMarkers()} */}\n            {/* displaying PopUp */}\n            {/* {this.renderPopup()} */}\n          </MapGL>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Structuredetails;\n","import React, { Component } from \"react\";\n// import MapWrapper from \"./components/MapWrapper\";\n// import SingleMap from \"./components/SingleMap\";\nimport \"./Dashboard.css\";\nimport {\n  getHospitalList\n  //  getHospitalsbyLocation,\n  // getAtlStructuresbyLocation,\n  // getDistanceDuration,\n  // errorHandler\n} from \"../api.js\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hospitalItems: []\n    };\n  }\n  componentDidMount() {\n    getHospitalList().then(response => {\n      const hospitalItems = response.data;\n      console.log(hospitalItems, \"coucouuuuu\");\n      this.setState({ hospitalItems });\n    });\n  }\n\n  // dataTable() {\n  //   $(document).ready(function() {\n  //     $(\"#example\").DataTable({\n  //       searching: true\n  //     });\n  //   });\n  // }\n\n  render() {\n    const { hospitalItems } = this.state;\n    return (\n      <section className=\"Dashboard\">\n        <table\n          id=\"example\"\n          className=\"table table-striped table-bordered \"\n          cellSpacing=\"0\"\n          width=\"100%\"\n        >\n          <thead>\n            <tr>\n              <th className=\"th-sm\">Hospital Name</th>\n              <th className=\"th-sm\">Group Name</th>\n              <th className=\"th-sm\">Phone Number</th>\n              <th className=\"th-sm\">Street Address</th>\n              <th className=\"th-sm\">City, Zipcode</th>\n              <th className=\"th-sm\">Access Map</th>\n              <th className=\"th-sm\">Management Entity</th>\n              <th className=\"th-sm\">Edit</th>\n              <th className=\"th-sm\">Delete</th>\n            </tr>\n          </thead>\n          <tbody id=\"myTable\">\n            {hospitalItems.map((oneHospital, index) => {\n              return (\n                <tr key={index}>\n                  <td>{oneHospital.name}</td>\n                  <td>{oneHospital.group}</td>\n                  <td>{oneHospital.phoneNumber}</td>\n                  <td>\n                    {oneHospital.streetNumber} {oneHospital.roadType}{\" \"}\n                    {oneHospital.streetName}\n                  </td>\n                  <td>\n                    {oneHospital.city}, {oneHospital.zipCode}\n                  </td>\n                  <td>\n                    <a href={oneHospital.urlToPlan} className=\"text-info\">\n                      Link\n                    </a>\n                  </td>\n                  <td>{oneHospital.managerEntity}</td>\n                  <td>\n                    <a className=\"btn btn-primary btn-xs\">\n                      <i className=\"far fa-edit text-white\" />\n                    </a>\n                  </td>\n\n                  <td>\n                    <p\n                      data-placement=\"top\"\n                      data-toggle=\"tooltip\"\n                      title=\"Delete\"\n                    >\n                      <button\n                        className=\"btn btn-danger btn-xs\"\n                        data-title=\"Delete\"\n                        data-toggle=\"modal\"\n                        data-target=\"#delete\"\n                      >\n                        <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n                      </button>\n                    </p>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <script>dataTable()</script>\n      </section>\n    );\n  }\n}\n\nexport default Dashboard;\n","//Main\nimport React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n//Components\nimport Navigation from \"./components/Navigation.js\";\nimport IsEmergency from \"./components/IsEmergency.js\";\nimport MapWrapper from \"./components/MapWrapper.js\";\nimport NotFound from \"./components/NotFound.js\";\n//Styling\nimport \"./App.scss\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Questions from \"./components/Questions.js\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport SignupPage from \"./components/SignUpPage.js\";\nimport LoginPage from \"./components/LoginPage.js\";\nimport GeolocationPoint from \"./components/GeolocationCoodinates.js\";\nimport Structuredetails from \"./components/Structuredetails.js\";\nimport { getLogout } from \"./api\";\nimport Dashboard from \"./components/Dashboard.js\";\n//import SpeedDial from \"./components/SpeedDial\";\n\nrequire(\"dotenv\").config();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userInfo = localStorage.getItem(\"currentUser\");\n    if (userInfo) {\n      // turns the string back into an object if we are logged in\n      userInfo = JSON.parse(userInfo);\n    }\n    this.state = {\n      currentUser: userInfo,\n\n      patientGender: \"\",\n      neededSpecialist: \"\",\n      patientAdult: \"\",\n      beforeChildren: true,\n      patientLocation: { latitude: 0, longitude: 0 }\n    };\n  }\n\n  updateUser(newUser) {\n    if (newUser) {\n      // save the user info in local storage if we are logging IN\n      // turn it into a json string before we save\n      localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\n    } else {\n      // delete this info when we are loging out\n      localStorage.removeItem(\"currentUser\");\n    }\n    this.setState({ currentUser: newUser });\n  }\n\n  updatePatient(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  updatePatientPosition(latitude, longitude) {\n    this.setState({\n      patientLocation: { latitude, longitude }\n    });\n  }\n\n  logoutClick() {\n    getLogout()\n      .then(response => {\n        // console.log(\"Log Out\", response.data);\n        // set the currentUser state to empty\n        this.updateUser(null);\n      })\n      .catch(err => err);\n  }\n\n  render() {\n    const { neededSpecialist, patientAdult, patientLocation } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <Navigation\n            currentUser={this.state.currentUser}\n            logoutClick={() => this.logoutClick()}\n          />\n        </header>\n\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return (\n                <IsEmergency\n                  updatePatient={event => this.updatePatient(event)}\n                />\n              );\n            }}\n          />\n\n          {/* <Route\n            updatePatient={event => this.updatePatient(event)}\n            path=\"/\"\n            exact\n            component={IsEmergency}\n            key=\"isEmergency\"\n          /> */}\n          <Route\n            key=\"3\"\n            path=\"/map\"\n            render={() => {\n              return (\n                <MapWrapper\n                  neededSpecialist={neededSpecialist}\n                  patientType={patientAdult}\n                  userLocation={patientLocation}\n                  updatePatient={event => this.updatePatient(event)}\n                />\n              );\n            }}\n          />\n          <Route key=\"geoloc\" path=\"/geoloc\" component={GeolocationPoint} />\n          <Route\n            key=\"form\"\n            path=\"/form\"\n            render={() => {\n              return (\n                <Questions\n                  updatePatient={event => this.updatePatient(event)}\n                  onGeolocation={(latitude, longitude) =>\n                    this.updatePatientPosition(latitude, longitude)\n                  }\n                />\n              );\n            }}\n          />\n\n          <Route\n            key=\"signup\"\n            path=\"/signup\"\n            render={() => {\n              return (\n                <SignupPage\n                  currentUser={this.state.currentUser}\n                  signupSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            key=\"login\"\n            path=\"/login\"\n            render={() => {\n              return (\n                <LoginPage\n                  currentUser={this.state.currentUser}\n                  loginSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/structure-details/:structureId\"\n            component={Structuredetails}\n          />\n          <Route component={NotFound} key=\"NotFound\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}