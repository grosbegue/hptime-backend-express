{"version":3,"sources":["components/Navigation.js","components/IsEmergency.js","components/MapMarker.js","components/UserMarker.js","components/PopUp.js","components/SingleMap.js","api.js","components/MapWrapper.js","components/NotFound.js","components/SpecialtyCard.js","components/PathologyQuestions.js","components/AdultQuestion.js","components/QuestionsIndicator.js","components/LocationSearchInput.js","components/UserLocalisation.js","components/Questions.js","components/SignUpPage.js","components/LoginPage.js","components/GeolocationCoodinates.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","_this","this","react_default","a","createElement","Container_default","Navbar_default","bg","variant","expand","fixed","collapseOnSelect","lib","to","Brand","Toggle","aria-controls","Collapse","id","Nav_default","className","Link","props","currentUser","Fragment","onClick","logoutClick","Component","IsEmergency","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","show","handleShow","bind","assertThisInitialized","handleClose","setState","src","alt","Button_default","size","Modal_default","assign","aria-labelledby","centered","onHide","Header","Title","Body","Footer","href","PureComponent","ICON","hospitalUnfiltered","cursor","fill","stroke","opacity","hospitalFiltered","structureUnfiltered","structureFiltered","MapMarker","_this$props","_this$props$size","isHospital","oneItem","group","isFiltered","filtered","version","x","y","viewBox","enable-background","height","style","objectSpread","transform","concat","d","UserMarker","PopUp","popupInfo","esm","longitude","latitude","closeOnClick","anchor","onClose","onCloseClick","name","phoneNumber","streetNumber","roadType","streetName","zipCode","city","urlToPlan","SingleMap","hospitalArray","structureArray","altStructure","newstructureArray","viewport","zoom","pitch","bearing","_onViewportChange","renderUserMarker","_this2","map","index","key","components_MapMarker","_this3","src_components_PopUp","clearPopup","location","src_components_UserMarker","transitionInterpolator","FlyToInterpolator","transitionDuration","userLocation","console","log","mapboxApiAccessToken","process","mapStyle","width","window","innerHeight","onViewportChange","renderMapAndMarkers","renderPopup","MAPBOX_KEY","backendApi","axios","create","baseURL","withCredentials","errorHandler","err","response","data","alert","getAtlStructuresbyLocation","latt","long","get","MapWrapper","setRedirect","redirect","renderRedirect","Redirect","open","isSubmitSuccessful","all","then","spread","responseHos","responseAlt","_this2$props","neededSpecialist","patientType","i","tenFirstaltStructure","slice","filteredHospiatls","filter","el","availablePoles","some","pole","pathology","mapboxArray","userLong","userLatt","catch","duration","Math","round","durations","sort","b","Swal","fire","position","type","title","showConfirmButton","timer","_this$state","Row_default","Col_default","sm","span","order","md","block","aria-expanded","Collapse_default","in","data-parent","scope","oneStructure","AppelPrealable","src_components_SingleMap","NotFound","SpecialtyCard","isVisible","event","updatePatient","nextStep","picture","bodyPart","clickHandler","value","Ul","posed","ul","transition","ease","delayChildren","staggerChildren","delay","closed","Li","li","PathologyQuestions","isOpen","onFormStep","totalSteps","currentStep","setTimeout","oldProps","isActive","specialtyList","image","infoTitle","infoText","previousStep","xs","lg","pose","oneSpecialty","src_components_SpecialtyCard","userChoice","AdultQuestion","Questions","dots","currentActiveDot","numberOfSteps","Array","apply","length","dot","LocationSearchInput","currentUserPosition","addressInputValue","isLoadingCoordinates","toMapResults","validated","autocompleteInput","React","createRef","autocomplete","handlePlaceChanged","getUserLocationBrowser","handleChange","goToResult","southWest","google","maps","LatLng","northEast","ileDeFrance","LatLngBounds","places","Autocomplete","current","bounds","types","componentRestrictions","country","addListener","target","checked","defineProperty","place","getPlace","geometry","ga","l","ma","onGeolocation","currentTarget","checkValidity","preventDefault","stopPropagation","toggleSearchCoordinates","navigator","geolocation","getCurrentPosition","reverseGeocode","coords","error","currentValue","params","latlng","results","formatted_address","_this4","Form_default","noValidate","onSubmit","e","handleSubmit","FormControl_default","placeholder","onChange","ref","required","UserLocalisation","src_components_LocationSearchInput","Check","components_QuestionsIndicator","react_step_wizard_min_default","onStepChange","handleStep","initialStep","src_components_AdultQuestion","hashKey","updateFormIndicator","components_PathologyQuestions","src_components_UserLocalisation","SignupPage","username","password","_event$target","userSubmission","post","signupSuccess","genericOnChange","email","LoginPage","loginCredentials","loginSuccess","es_Redirect","Demo","isGeolocationAvailable","isGeolocationEnabled","altitude","heading","speed","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","require","config","App","userInfo","localStorage","getItem","JSON","parse","patientGender","patientAdult","beforeChildren","patientLocation","newUser","setItem","stringify","removeItem","updateUser","components_Navigation","Switch","Route","path","exact","component","render","components_MapWrapper","GeolocationPoint","components_Questions","updatePatientPosition","components_SignUpPage","user","src_components_LoginPage","Boolean","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e886fa8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nclass Navigation extends Component {\n  // state = { }\n\n  render() {\n    return (\n      <Container>\n        <Navbar\n          bg=\"white\"\n          variant=\"light\"\n          expand=\"sm\"\n          fixed=\"top\"\n          collapseOnSelect=\"true\"\n        >\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              {\" \"}\n              Med<b>Direct</b>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <LinkContainer to=\"/form\">\n                <Nav.Link>Form Component</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/map\">\n                <Nav.Link>Map Component</Nav.Link>\n              </LinkContainer>\n              {this.props.currentUser ? (\n                <>\n                  <LinkContainer to=\"/map\">\n                    <Nav.Link onClick={() => this.props.logoutClick()}>\n                      Log Out\n                    </Nav.Link>\n                  </LinkContainer>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <Nav.Link>S'enregistrer</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>Se connecter</Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </Container>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { PureComponent } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./IsEmergency.scss\";\n\nclass IsEmergency extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      show: false\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  // show and hide modal\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <section className=\"bg-light\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 pt-4\">\n                <h1 className=\"display-3 pt-4\">\n                  <span className=\"text-primary\">Med</span>\n                  <span className=\"text-muted\">Direct</span>\n                </h1>\n              </div>\n              {/* illustration */}\n              <div className=\"col-lg-8  order-first order-md-1\">\n                <img\n                  src=\"/images/illustrations/medicine.svg\"\n                  alt=\"Illustration calme et apaisante de deux docteurs dans un hopital\"\n                  className=\"img-fluid\"\n                />\n              </div>\n              {/* speech and CTA */}\n              <div className=\"col-lg-4 py-4 pr-0\">\n                <p className=\"lead mb-3\">\n                  MedDirect vous aide a trouver les meilleurs soins d'urgence\n                  adaptés à vos besoins.\n                </p>\n                <p className=\"text-muted\">\n                  Estimez les temps d'attente dans les centres de soins à\n                  proximité et trouvez des alternatives sans attendre!\n                </p>\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  className=\"mt-3\"\n                  onClick={this.handleShow}\n                >\n                  Commencer\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <Modal\n          {...this.props}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n          show={this.state.show}\n          onHide={this.handleClose}\n        >\n          <Modal.Header>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Est-ce une urgence vitale?\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <p>\n              Si vous pensez que votre vie ou celle d'un proche est en danger,\n              appellez le SAMU, sinon merci de <b>cliquer sur Continuer.</b>\n            </p>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <a href=\"tel:+3315\">\n              <Button variant=\"danger\">\n                <i className=\"fas fa-phone\" /> Appeller le SAMU (15)\n              </Button>\n            </a>\n\n            <LinkContainer to=\"/form\">\n              <Button variant=\"primary\">\n                <i className=\"fas fa-arrow-right\" /> Continuer\n              </Button>\n            </LinkContainer>\n          </Modal.Footer>\n        </Modal>\n\n        <footer className=\"bg-light\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <p className=\"small text-muted p-5\">\n                Done with love by Christina Bailey, Christophe Begue, Thomas\n                Lesage, Samuel Bouaroua, and Raphael Veil.\n              </p>\n            </div>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default IsEmergency;\n","import React, { PureComponent } from \"react\";\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst hospitalUnfiltered = {\n  cursor: \"pointer\",\n  fill: \"#74b6f9\",\n  stroke: \"none\",\n  opacity: 0.5,\n  size: 25\n};\n\nconst hospitalFiltered = {\n  cursor: \"pointer\",\n  fill: \"#ef6c60\",\n  stroke: \"none\",\n  opacity: 1,\n  size: 25\n};\n\nconst structureUnfiltered = {\n  cursor: \"pointer\",\n  fill: \"#74b6f9\",\n  stroke: \"none\",\n  opacity: 0.5,\n  size: 25\n};\n\nconst structureFiltered = {\n  cursor: \"pointer\",\n  fill: \"#74b6f9\",\n  stroke: \"none\",\n  opacity: 1,\n  size: 25\n};\n\nclass MapMarker extends PureComponent {\n  render() {\n    const { size = 20, onClick } = this.props;\n    const isHospital = this.props.oneItem.group;\n    //  if false then not a hospital\n    const isFiltered = this.props.oneItem.filtered;\n    // if false then unfiltered\n\n    // console.log(isHospital);\n    if (isHospital && isFiltered) {\n      return (\n        <div>\n          <svg\n            version=\"1.1\"\n            id=\"Calque_1\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 384 512\"\n            enable-background=\"new 0 0 384 512\"\n            height={size}\n            style={{\n              ...hospitalFiltered,\n              transform: `translate(${-size / 2}px,${-size}px)`\n            }}\n            onClick={onClick}\n          >\n            <path\n              d=\"M192,0C86,0,0,86,0,192c0,77.4,27,99,172.3,309.7c9.5,13.8,29.9,13.8,39.5,0C357,291,384,269.4,384,192\n\tC384,86,298,0,192,0z M264,286h-39.8v-68.9h-64.3V286H120V121.1h39.8v62.4h64.3v-62.4H264V286z\"\n            />\n          </svg>\n\n          {/* <svg\n            height={size}\n            viewBox=\"0 0 24 24\"\n            style={{\n              ...hospitalFiltered,\n              transform: `translate(${-size / 2}px,${-size}px)`\n            }}\n            onClick={onClick}\n          >\n            <path d={ICON} />\n          </svg> */}\n        </div>\n      );\n    } else {\n      if (isHospital && !isFiltered) {\n        return (\n          <div>\n            <svg\n              height={size}\n              viewBox=\"0 0 24 24\"\n              style={{\n                ...hospitalUnfiltered,\n                transform: `translate(${-size / 2}px,${-size}px)`\n              }}\n              onClick={onClick}\n            >\n              <path d={ICON} />\n            </svg>\n          </div>\n        );\n      } else {\n        if (!isHospital && isFiltered) {\n          return (\n            <div>\n              <svg\n                version=\"1.1\"\n                id=\"Calque_1\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 384 512\"\n                enable-background=\"new 0 0 384 512\"\n                height={size}\n                style={{\n                  ...structureFiltered,\n                  transform: `translate(${-size / 2}px,${-size}px)`\n                }}\n                onClick={onClick}\n              >\n                <path\n                  d=\"M192,0C86,0,0,86,0,192c0,77.4,27,99,172.3,309.7c9.5,13.8,29.9,13.8,39.5,0C357,291,384,269.4,384,192\n\tC384,86,298,0,192,0z M239.1,283.1c-10.7,4.9-23.1,7.3-37,7.3c-12.7,0-24.5-2.1-35.3-6.3c-10.8-4.2-20.1-10.1-28.1-17.8\n\tc-7.9-7.7-14.1-16.9-18.6-27.6c-4.5-10.7-6.8-22.5-6.8-35.4c0-13.2,2.3-25.2,6.9-35.9c4.6-10.7,10.9-19.8,19-27.4\n\tc8.1-7.5,17.5-13.3,28.4-17.3c10.9-4,22.6-6.1,35.2-6.1c11.6,0,23.1,2.1,34.3,6.2c11.3,4.1,20.4,10.1,27.4,18l-27,27\n\tc-3.7-5.1-8.6-8.9-14.7-11.4c-6.1-2.5-12.3-3.7-18.6-3.7c-7,0-13.4,1.3-19.2,3.8c-5.8,2.6-10.8,6.1-15,10.6c-4.2,4.5-7.5,9.8-9.8,16\n\tc-2.3,6.1-3.5,12.8-3.5,20.1c0,7.5,1.2,14.3,3.5,20.5c2.3,6.2,5.5,11.5,9.7,16c4.1,4.4,9,7.9,14.8,10.4c5.7,2.5,12,3.7,18.9,3.7\n\tc7.9,0,14.8-1.5,20.7-4.7c5.9-3.1,10.6-7.1,14.2-12.1l27.7,26.1C258.8,271.6,249.8,278.2,239.1,283.1z\"\n                />\n              </svg>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <svg\n                height={size}\n                viewBox=\"0 0 24 24\"\n                style={{\n                  ...structureUnfiltered,\n                  transform: `translate(${-size / 2}px,${-size}px)`\n                }}\n                onClick={onClick}\n              >\n                <path d={ICON} />\n              </svg>\n            </div>\n          );\n        }\n      }\n    }\n  }\n}\n\nexport default MapMarker;\n","import React, { PureComponent } from \"react\";\nimport \"./UserMarker.scss\";\n\nclass UserMarker extends PureComponent {\n  render() {\n    const size = 10;\n    return (\n      <div\n        className=\"dot\"\n        style={{\n          cursor: \"pointer\",\n          transform: `translate(${-size}px,${-size}px)`\n        }}\n      >\n        <div className=\"centraldot\" />\n        <div className=\"wave\" />\n        <div className=\"wave2\" />\n      </div>\n    );\n  }\n}\n\nexport default UserMarker;\n","import React, { Component } from \"react\";\nimport \"./PopUp.css\";\nimport { Popup } from \"react-map-gl\";\n\nclass PopUp extends Component {\n  render() {\n    const { popupInfo } = this.props;\n\n    return (\n      <Popup\n        className=\"PopUp\"\n        // info passed\n        longitude={popupInfo.longitude}\n        latitude={popupInfo.latitude}\n        // functionality\n        closeOnClick={false}\n        anchor=\"top\"\n        onClose={this.props.onCloseClick}\n      >\n        {/* <p>\n          <b> {popupInfo.name}</b>\n          <br />\n          <a href=\"tel:+33{popupInfo.phoneNumber}\">\n            {popupInfo.phoneNumber}\n          </a>\n        </p> */}\n\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <p className=\"card-text small\">\n              {\" \"}\n              <b>{popupInfo.name}</b>\n            </p>\n            <p className=\"card-text small\">\n              <a href=\"tel:+33{popupInfo.phoneNumber}\">\n                {popupInfo.phoneNumber}\n              </a>\n            </p>\n            <p className=\"card-text small\">\n              {popupInfo.streetNumber} {popupInfo.roadType}{\" \"}\n              {popupInfo.streetName}\n              <br />\n              {popupInfo.zipCode} {popupInfo.city}\n            </p>\n            <a\n              href=\"http://maps.google.com/?q=<{popupInfo.latitude}>,<{popupInfo.longitude}>\"\n              className=\"card-link small\"\n            >\n              Route Me\n            </a>\n            <a href={popupInfo.urlToPlan} className=\"card-link small\">\n              Access Plan\n            </a>\n          </div>\n        </div>\n      </Popup>\n    );\n  }\n}\n\nexport default PopUp;\n","// See and copy pasta available components\nimport React, { Component } from \"react\";\nimport \"./SingleMap.scss\";\nimport MapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport MapMarker from \"./MapMarker.js\";\nimport UserMarker from \"./UserMarker.js\";\nimport PopUp from \"./PopUp\";\nconst MAPBOX_KEY = process.env.REACT_APP_MAPBOX_TOKEN;\n\nclass SingleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hospitalArray: [],\n      structureArray: [],\n      altStructure: [],\n      newstructureArray: [],\n      viewport: {\n        latitude: 48.85341,\n        longitude: 2.3488,\n        zoom: 10,\n        pitch: 45,\n        bearing: -17.6\n      },\n      popupInfo: null\n    };\n\n    this._onViewportChange = this._onViewportChange.bind(this);\n    this.renderUserMarker = this.renderUserMarker.bind(this);\n    // need to bind the specific event to avoid triggering on load\n  }\n\n  renderMapAndMarkers() {\n    const structureArray = this.props.structureArray;\n    let resultArray = structureArray.map((oneItem, index) => {\n      return (\n        <Marker\n          key={`marker-${index}`}\n          longitude={oneItem.longitude}\n          latitude={oneItem.latitude}\n        >\n          <MapMarker\n            structureArray={this.props.structureArray}\n            oneItem={oneItem}\n            onClick={() => this.setState({ popupInfo: oneItem })}\n          />\n        </Marker>\n      );\n    });\n    return resultArray;\n  }\n\n  clearPopup() {\n    this.setState({ popupInfo: null });\n  }\n\n  // update map on window size\n  _onViewportChange(viewport) {\n    this.setState({ viewport });\n  }\n\n  // renders a single popup\n  renderPopup() {\n    const { popupInfo } = this.state;\n    return (\n      popupInfo && (\n        <PopUp popupInfo={popupInfo} onCloseClick={() => this.clearPopup()} />\n      )\n    );\n  }\n\n  // set user current marker and fly to it\n  renderUserMarker(location) {\n    if (location) {\n      //      this._goToViewport(location.latitude, location.longitude);\n      // do not remove please (infinite loop line 86)\n      return (\n        <Marker latitude={location.latitude} longitude={location.longitude}>\n          <UserMarker />\n        </Marker>\n      );\n    }\n  }\n\n  // change viewport to given location\n  _goToViewport(longitude, latitude) {\n    this._onViewportChange({\n      viewport: { longitude, latitude },\n      zoom: 14,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 2500\n    });\n  }\n\n  /////Master Render//////\n  render() {\n    const { viewport } = this.state;\n    const { userLocation } = this.props;\n    console.log(this.props.structureArray, \"coucou\");\n\n    return (\n      <MapGL\n        {...viewport}\n        mapboxApiAccessToken={MAPBOX_KEY}\n        mapStyle=\"mapbox://styles/project3ironhack/cjsk4xibk5rjh1fmqo9k31hym\"\n        width=\"100%\"\n        height={window.innerHeight - 56}\n        // 56 to substract navbar height of window size so the map is full height\n        onViewportChange={this._onViewportChange}\n      >\n        {/* user marker  */}\n        {this.renderUserMarker(userLocation)}\n        {/* calling method below with Marker */}\n        {this.renderMapAndMarkers()}\n        {/* displaying PopUp */}\n        {this.renderPopup()}\n      </MapGL>\n    );\n  }\n}\n\nexport default SingleMap;\n","import axios from \"axios\";\n\nconst MAPBOX_KEY = process.env.REACT_APP_MAPBOX_TOKEN;\n\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true\n});\n\nfunction errorHandler(err) {\n  if (err.response && err.response.data) {\n    console.log(\"API Error\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err);\n  }\n  alert(\"Sorry! Something went wrong.\");\n\n  throw err;\n}\n\nexport function getHospitalList() {\n  return backendApi.get(\"/api/hospitals?size=60&offset=60\").catch(errorHandler);\n}\n\nexport function getAltStructureList() {\n  return backendApi\n    .get(\"/api/alternatives-structures?size=20&offset=20\")\n    .catch(errorHandler);\n}\n\nexport function getDistanceDuration(userLong, userLatt, long, latt) {\n  return axios\n    .get(\n      `https://api.mapbox.com/directions-matrix/v1/mapbox/walking/${userLong},${userLatt};${long},${latt}?sources=1&annotations=distance,duration&access_token=${MAPBOX_KEY}`\n    )\n    .catch(errorHandler);\n}\nexport function postSignUp(userSubmission) {\n  return backendApi\n    .post(\"/api/process-signup\", userSubmission)\n    .catch(errorHandler);\n}\n\nexport function postLogin(loginCredentials) {\n  return backendApi\n    .post(\"/api/process-login\", loginCredentials)\n    .catch(errorHandler);\n}\n\nexport function getLogout() {\n  return backendApi.get(\"/api/logout\").catch(errorHandler);\n}\n\nexport function getHospitalsbyLocation(latt, long) {\n  return backendApi.get(\n    `/api/hospitals/near?latitude=${latt}&longitude=${long}&radius=50000`\n  );\n}\n\nexport function getAtlStructuresbyLocation(latt, long) {\n  return backendApi.get(\n    `/api/alternatives-structures/near?latitude=${latt}&longitude=${long}&radius=50000`\n  );\n}\n// example function\n// export function getLogOut() {\n//   return backendApi.get(\"/api/logout\").catch(errorHandler);\n// }\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport SingleMap from \"./SingleMap.js\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Swal from \"sweetalert2\";\nimport { Redirect } from \"react-router\";\nimport {\n  getHospitalList,\n  getAltStructureList,\n  getHospitalsbyLocation,\n  getAtlStructuresbyLocation,\n  getDistanceDuration\n} from \"../api.js\";\n\nconst MAPBOX_KEY = process.env.REACT_APP_MAPBOX_TOKEN;\n\nclass MapWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      //hospitalArray renders all the hospital from the backend\n      hospitalArray: [],\n      //Will render all the alternative structure from the backend\n      altStructure: [],\n      // newstructureArray render all the filtered hospitals from the firltering process\n      newstructureArray: [],\n      // structureArray renders all hospitals and alt structures in existance (full array)\n      structureArray: [],\n      isSubmitSuccessful: false\n    };\n  }\n  // Allow us to filter data coming fro the back end to render only some kind of hospitals\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  componentDidMount() {\n    const userLocation = this.props.userLocation;\n\n    // get data from our backend Express API (localhost:2999)\n    if (userLocation) {\n      axios\n        .all([\n          getHospitalsbyLocation(userLocation.latitude, userLocation.longitude),\n          getAtlStructuresbyLocation(\n            userLocation.latitude,\n            userLocation.longitude\n          )\n        ])\n        .then(\n          axios.spread((responseHos, responseAlt) => {\n            const { neededSpecialist, patientType } = this.props;\n            // console.log(neededSpecialist, patientType, \"Structure list\", response.data);\n            const hospitalArray = responseHos.data || [];\n            const altStructure = responseAlt.data || [];\n            let i = 0;\n            for (i = 0; i <= 10; i++) {\n              altStructure[i].filtered = true;\n            }\n            const tenFirstaltStructure = altStructure.slice(0, 10);\n            // console.log(altStructure);\n            // console.log(newstructureArray);\n\n            const filteredHospiatls = hospitalArray.filter(el => {\n              if (el.availablePoles) {\n                //filtered is the object that allow us to know if the hospital is or not in the proposition list\n                el.filtered = el.availablePoles.some(\n                  pole =>\n                    pole.pathology === neededSpecialist &&\n                    (pole.patientType === patientType ||\n                      pole.patientType === \"Universel\")\n                );\n\n                return el.filtered;\n              }\n            });\n\n            const newstructureArray = tenFirstaltStructure\n              .concat(filteredHospiatls)\n              .slice(0, 20);\n            console.log(newstructureArray);\n            const mapboxArray = newstructureArray.map(el =>\n              getDistanceDuration(\n                userLocation.longitude,\n                userLocation.latitude,\n                el.longitude,\n                el.latitude\n              ).then(response => {\n                el.duration = Math.round(response.data.durations[0][0] / 60);\n              })\n            );\n            axios.all(mapboxArray).then(() => {\n              newstructureArray.sort(function(a, b) {\n                return a.duration - b.duration;\n              });\n              console.log(newstructureArray);\n              this.setState({ newstructureArray });\n            });\n\n            const structureArray = hospitalArray.concat(altStructure);\n            console.log(structureArray);\n\n            this.setState({\n              structureArray,\n              hospitalArray,\n              altStructure,\n              newstructureArray\n            });\n          })\n        )\n        .catch(() => {\n          Swal.fire({\n            position: \"center\",\n            type: \"info\",\n            title: \"Etes-vous sûr d avoir suivi le questionnaire?\",\n            showConfirmButton: false,\n            timer: 2000\n          });\n          this.setState({ isSubmitSuccessful: true });\n        });\n    }\n  }\n  render() {\n    const { newstructureArray, open } = this.state;\n    return this.state.isSubmitSuccessful ? (\n      // returning the <Redirect /> ONLY works inside RENDER\n      <Redirect to=\"/\" />\n    ) : (\n      <Row className=\"no-gutters\">\n        {/* list of relevant results with a toggle button */}\n        <Col\n          sm={{ span: 12, order: 2 }}\n          md={{ span: 4, order: 2 }}\n          id=\"map-filter\"\n        >\n          <div id=\"accordion\">\n            <div className=\"card border-bottom-0\">\n              <div className=\"card-header\" id=\"headingOne\">\n                {open ? (\n                  <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    block\n                    className=\"d-md-none\"\n                    onClick={() => this.setState({ open: !open })}\n                    aria-controls=\"example-collapse-text\"\n                    aria-expanded={open}\n                  >\n                    <p className=\"clollapsBtnText\">Carte seulement</p>\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"outline-primary\"\n                    size=\"lg\"\n                    block\n                    className=\"d-md-none\"\n                    onClick={() => this.setState({ open: !open })}\n                    aria-controls=\"example-collapse-text\"\n                    aria-expanded={open}\n                  >\n                    <p className=\"clollapsBtnText\">Carte et propositions</p>\n                  </Button>\n                )}\n              </div>\n              <Collapse\n                in={this.state.open}\n                className=\" dimension\"\n                id=\"example-collapse-text\"\n              >\n                <div aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                  {/* ---------------------------------------------------------- */}\n                  {/* this table display the structure propostions into the collaps button list */}\n                  {/* ---------------------------------------------------------- */}\n                  <table className=\"table scrolling\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"title1Col\" scope=\"col\">\n                          Tri/Pertinence\n                        </th>\n                        <th className=\"text-center colDeux\" scope=\"col\">\n                          Ouverte\n                        </th>\n                        <th className=\"text-center colDeux\" scope=\"col\">\n                          Attente\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {newstructureArray.map((oneStructure, index) => {\n                        return (\n                          <tr key={index}>\n                            <td>\n                              <ul className=\"list-group list-group-flush resultTb FCol\">\n                                <li className=\"list-group-item namePolice small\">\n                                  <b>{oneStructure.name}</b>\n                                </li>\n                                <li className=\"list-group-item typePolice\">\n                                  <a href=\"tel:+33{popupInfo.phoneNumber}\">\n                                    {oneStructure.phoneNumber}\n                                  </a>{\" \"}\n                                </li>\n                              </ul>\n                            </td>\n                            <td className=\"cel  colDeux\">\n                              {oneStructure.AppelPrealable ? (\n                                <span className=\"badge badge-success badge-pill\">\n                                  Oui\n                                </span>\n                              ) : (\n                                <span className=\"badge badge-danger badge-pill\">\n                                  Non\n                                </span>\n                              )}\n                            </td>\n                            <td className=\"cel colDeux\">\n                              <ul className=\"list-group list-unstyled resultTb\">\n                                <li className=\"list-list-unstyled\">\n                                  <span className=\"badge badge-primary\">\n                                    {oneStructure.duration} min\n                                  </span>\n                                </li>\n                              </ul>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              </Collapse>\n            </div>\n          </div>\n        </Col>\n\n        {/* map container receiving data and user location as props */}\n        <Col sm={{ span: 12, order: 2 }} md={{ span: 8, order: 2 }}>\n          <SingleMap\n            hospitalArray={this.state.hospitalArray}\n            altStructure={this.state.altStructure}\n            newstructureArray={this.state.newstructureArray}\n            structureArray={this.state.structureArray}\n            userLocation={this.props.userLocation}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default MapWrapper;\n","import React, { Component } from \"react\";\nimport \"./NotFound.css\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section className=\"NotFound\">\n        <h2>404 Not Found</h2>\n        <p>The page you are looking for is not available.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./SpecialtyCard.scss\";\n\nclass SpecialtyCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isVisible: false };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isVisible: !this.state.isVisible\n    });\n  }\n\n  clickHandler(event) {\n    this.props.updatePatient(event);\n    this.props.nextStep();\n  }\n  render() {\n    return (\n      <Col>\n        <div className=\"card flex-row m-3 bg-white\" key={this.props.index}>\n          <div className=\"card-header bg-light p-2\">\n            <img\n              src={this.props.picture}\n              alt={this.props.bodyPart}\n              className=\"picto d-block mx-auto\"\n            />\n          </div>\n          <div className=\"w-100 px-2\">\n            <div className=\"card-title p-2 text-dark font-weight-light\">\n              <h4 className=\"font-weight-light\">{this.props.bodyPart}</h4>\n            </div>\n\n            <div className=\"card-block p-2 pl-2 d-flex justify-content-end\">\n              {/* <p className=\"card-text\">{this.props.infoText}</p> */}\n              <Button\n                variant=\"outline-dark mr-2\"\n                // onClick={event => this.clickHandler(event)}\n              >\n                <i className=\"far fa-question-circle\" />\n              </Button>\n              <Button\n                variant=\"primary\"\n                className=\"w-50\"\n                onClick={event => this.clickHandler(event)}\n                name=\"neededSpecialist\"\n                value={this.props.neededSpecialist}\n              >\n                Valider\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default SpecialtyCard;\n","import React, { Component } from \"react\";\nimport posed, { PoseGroup } from \"react-pose\";\nimport { Link } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n// child card component\nimport SpecialtyCard from \"./SpecialtyCard\";\n// images\nconst generale = \"/images/pictos/medical.svg\";\nconst dent = \"/images/pictos/dentaire.svg\";\nconst uterus = \"/images/pictos/gynecologie.svg\";\nconst main = \"/images/pictos/plaie_de_main.svg\";\nconst oeil = \"/images/pictos/ophtalmologie.svg\";\nconst orl = \"/images/pictos/ORL2.png\";\nconst anus = \"/images/pictos/anus.svg\";\nconst psychiatrie = \"/images/pictos/psychiatrie.svg\";\nconst ventre = \"/images/pictos/ventre.svg\";\nconst torso = \"/images/pictos/torso.svg\";\nconst brulure = \"/images/pictos/brulure.svg\";\nconst fracture = \"/images/pictos/fracture.svg\";\nconst gorge = \"/images/pictos/gorge.svg\";\nconst grossesse = \"/images/pictos/grossesse.svg\";\n\nconst Ul = posed.ul({\n  open: {\n    transition: { ease: \"easeInOut\", duration: 300 },\n    x: 0,\n    delayChildren: 100,\n    staggerChildren: 120,\n    opacity: 1,\n    delay: 300\n  },\n  closed: { x: 20, delay: 300, opacity: 0 }\n});\n\nconst Li = posed.li({\n  open: {\n    transition: { ease: \"easeInOut\", duration: 400 },\n    y: 0,\n    opacity: 1,\n    x: 0\n  },\n  closed: { y: 0, opacity: 0, x: 300 }\n});\n\n// function pathologyAnimation() {\n//   if (this.props.pathologyAnimate === true) {\n//     setTimeout(this.toggle, 1000);\n//   }\n// }\n\nclass PathologyQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  // update user search filters\n  clickHandler(event) {\n    this.props.updatePatient(event);\n  }\n\n  // show next step and lift choice up to form step counter\n  userChoice(event) {\n    this.props.nextStep(event);\n    this.props.onFormStep(this.props.totalSteps, this.props.currentStep);\n  }\n  componentWillMount() {\n    setTimeout(console.log(\"coucou pathos mount\"), 500);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (!oldProps.isActive && this.props.isActive) {\n      console.log(\"coucou pathos-----------------\");\n      this.setState({ isOpen: true });\n    }\n  }\n\n  // card list of specialities that helps to filter search results of hospitals and structures with corresponding services\n  render() {\n    const { isOpen } = this.state;\n\n    const specialtyList = [\n      {\n        bodyPart: \"Oeil\",\n        neededSpecialist: \"Ophtalmologiques\",\n        image: oeil,\n        infoTitle: \"\",\n        infoText:\n          \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \"\n      },\n      {\n        bodyPart: \"ORL\",\n        neededSpecialist: \"Oto-rhino-laryngologiques\",\n        image: orl,\n        infoTitle: \"\",\n        infoText: \"Le Lorem Ipsum est simplement du faux texte employé dans.\"\n      },\n      {\n        bodyPart: \"Dents\",\n        neededSpecialist: \"Dentaires\",\n        image: dent,\n        infoTitle: \"\",\n        infoText:\n          \"Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. \"\n      },\n      {\n        bodyPart: \"Problème à la gorge\",\n        neededSpecialist: \"Oto-rhino-laryngologiques\",\n        image: gorge,\n        infoTitle: \"\",\n        infoText: \"Le Lorem Ipsum est simplement du faux texte employé dans.\"\n      },\n      {\n        bodyPart: \"Main (plaie ouverte)\",\n        neededSpecialist: \"Plaies de la main\",\n        image: main,\n        infoTitle: \"\",\n        infoText: \"Le Lorem Ipsum est simplement du faux texte employé dans.\"\n      },\n      {\n        bodyPart: \"Poitrine\",\n        neededSpecialist: \"Générales\",\n        image: torso,\n        infoTitle: \"\",\n        infoText:\n          \"La proctologie. Lorem Ipsum est simplement du faux texte employé dans la composition\"\n      },\n      {\n        bodyPart: \"Ventre\",\n        neededSpecialist: \"Générales\",\n        image: ventre,\n        infoTitle: \"\",\n        infoText:\n          \"La proctologie. Lorem Ipsum est simplement du faux texte employé dans la composition\"\n      },\n      {\n        bodyPart: \"Gynécologie\",\n        neededSpecialist: \"Gynéco-obstétricales\",\n        image: uterus,\n        infoTitle: \"\",\n        infoText: \"Le Lorem Ipsum est simplement du faux texte employé dans.\"\n      },\n      {\n        bodyPart: \"Grossesse\",\n        neededSpecialist: \"Gynéco-obstétricales\",\n        image: grossesse,\n        infoTitle: \"\",\n        infoText: \"Le Lorem Ipsum est simplement du faux texte employé dans.\"\n      },\n      {\n        bodyPart: \"Côlon\",\n        neededSpecialist: \"Proctology\",\n        image: anus,\n        infoTitle: \"\",\n        infoText:\n          \"La proctologie. Lorem Ipsum est simplement du faux texte employé dans la composition\"\n      },\n      {\n        bodyPart: \"Psychiatrie\",\n        neededSpecialist: \"Psychiatriques\",\n        image: psychiatrie,\n        infoTitle: \"\",\n        infoText: \"Le Lorem Ipsum est simplement du faux texte employé dans.\"\n      },\n      {\n        bodyPart: \"Brulure (medecine générale)\",\n        neededSpecialist: \"Générales\",\n        image: brulure,\n        infoTitle: \"\",\n        infoText: \"Pour tout autre type d'urgence.\"\n      },\n      {\n        bodyPart: \"Fracture (medecine générale)\",\n        neededSpecialist: \"Générales\",\n        image: fracture,\n        infoTitle: \"\",\n        infoText: \"Pour tout autre type d'urgence.\"\n      },\n      {\n        bodyPart: \"Medecine générale\",\n        neededSpecialist: \"Générales\",\n        image: generale,\n        infoTitle: \"\",\n        infoText: \"Pour tout autre type d'urgence.\"\n      }\n    ];\n    return (\n      <section id=\"PathologyCards\">\n        {/* quuestion */}\n        <p className=\"lead text-center\">\n          <span className=\"float-left pl-3\">\n            <Link\n              to=\"#0\"\n              onClick={this.props.previousStep}\n              className=\"text-secondary\"\n            >\n              <i className=\"fas fa-arrow-left mx-2\" />\n              Retour\n            </Link>\n          </span>\n          <span className=\"text-center mr-4 pr-4\">\n            Où se situe la douleur ?\n          </span>\n        </p>\n\n        {/* card list */}\n        <Row className=\"d-flex justify-content-center\">\n          <Col xs={12} sm={12} md={9} lg={6}>\n            <Ul pose={isOpen ? \"open\" : \"closed\"} className=\"list-unstyled\">\n              {specialtyList.map((oneSpecialty, index) => {\n                return (\n                  <Li key={index} className=\"item\">\n                    <SpecialtyCard\n                      // card specs\n                      bodyPart={oneSpecialty.bodyPart}\n                      picture={oneSpecialty.image}\n                      neededSpecialist={oneSpecialty.neededSpecialist}\n                      infoText={oneSpecialty.infoText}\n                      index={index}\n                      // update filter and next step in form events\n                      updatePatient={event => this.props.updatePatient(event)}\n                      nextStep={event => this.userChoice(event)}\n                    />\n                  </Li>\n                );\n              })}\n            </Ul>\n          </Col>\n        </Row>\n      </section>\n    );\n  }\n}\n\nexport default PathologyQuestions;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./AdultQuestion.scss\";\n\nclass AdultQuestion extends Component {\n  clickHandler(event) {\n    this.props.nextStep();\n    this.props.updatePatient(event);\n    this.props.onFormStep(this.props.totalSteps, this.props.currentStep);\n  }\n  render() {\n    return (\n      <section className=\"text-center\">\n        <div className=\"bg-toy\" />\n        <p className=\"lead my-4\">Le patient a-t-il plus de 16 ans ?</p>\n\n        <Button\n          variant=\"primary\"\n          onClick={event => this.clickHandler(event)}\n          name=\"patientAdult\"\n          value=\"Enfants\"\n        >\n          Enfant\n        </Button>\n\n        <Button\n          variant=\"secondary\"\n          onClick={event => this.clickHandler(event)}\n          name=\"patientAdult\"\n          value=\"Adultes\"\n          className=\"mx-3\"\n        >\n          Adulte\n        </Button>\n      </section>\n    );\n  }\n}\n\nexport default AdultQuestion;\n","import React, { Component } from \"react\";\nimport \"./QuestionsIndicator.scss\";\n\nfunction renderDots(dots, currentActiveDot) {\n  // number to array to be able to use map()\n  let pills = Array.apply(null, { length: dots }).map((dot, index) => (\n    <span\n      key={index}\n      // determine if dot must be set to .active class\n      className={index === currentActiveDot ? \" dot active\" : \"dot\"}\n    >\n      •\n    </span>\n  ));\n  return pills;\n}\nclass Questions extends Component {\n  render() {\n    const { numberOfSteps, currentStep } = this.props;\n    return <section>{renderDots(numberOfSteps, currentStep)}</section>;\n  }\n}\n\nexport default Questions;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./LocationSearchInput.scss\";\n\n// do not remove the line below please\n/* global google */\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUserPosition: {\n        latitude: null,\n        longitude: null\n      },\n      addressInputValue: \"\",\n      isLoadingCoordinates: false,\n      toMapResults: false,\n      validated: false\n    };\n\n    // binds for events (needs cleaning)\n    this.autocompleteInput = React.createRef();\n    this.autocomplete = null;\n    this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n    this.getUserLocationBrowser = this.getUserLocationBrowser.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.goToResult = this.goToResult.bind(this);\n  }\n\n  // load Google API for autocompletion on mount\n  componentDidMount() {\n    // bound the search to ile de france for now\n    var southWest = new google.maps.LatLng(48.1203, 1.4467);\n    var northEast = new google.maps.LatLng(49.2413, 3.5585);\n    var ileDeFrance = new google.maps.LatLngBounds(southWest, northEast);\n\n    // monitor form and change result on event\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.autocompleteInput.current,\n      {\n        bounds: ileDeFrance,\n        types: [\"geocode\"],\n        componentRestrictions: { country: \"fr\" }\n      }\n    );\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceChanged);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  // update state if any change on form\n  handlePlaceChanged() {\n    this.setState({\n      isLoadingCoordinates: true\n    });\n    const place = this.autocomplete.getPlace();\n    const longitude = place.geometry.viewport.ga.l;\n    const latitude = place.geometry.viewport.ma.l;\n\n    this.setState({\n      currentUserPosition: {\n        latitude: latitude,\n        longitude: longitude\n      },\n      isLoadingCoordinates: false\n    });\n\n    // TODO lifting state up top\n    this.props.onGeolocation(latitude, longitude);\n\n    // redirect user to map with filtered results\n    this.goToResult();\n  }\n\n  // input validation\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n  }\n  // get user coords with HTML5 browser feature on click, redirect when filled\n  getUserLocationBrowser() {\n    const { currentUserPosition, isLoadingCoordinates } = this.state;\n\n    // triggered only if user is not located\n    if (!currentUserPosition.latitude) {\n      // loading icon\n      this.toggleSearchCoordinates(isLoadingCoordinates);\n\n      const location = window.navigator && window.navigator.geolocation;\n      if (location) {\n        location.getCurrentPosition(\n          position => {\n            // update state with results\n            const { isLoadingCoordinates } = this.state;\n            this.toggleSearchCoordinates(isLoadingCoordinates);\n\n            // reverse geocode\n            this.reverseGeocode(\n              position.coords.latitude,\n              position.coords.longitude\n            );\n            // TODO lifting state up here too\n            this.props.onGeolocation(\n              position.coords.latitude,\n              position.coords.longitude\n            );\n\n            // redirect user to map with filtered results\n            this.goToResult();\n          },\n          error => {\n            this.setState({\n              latitude: \"err-latitude\",\n              longitude: \"err-longitude\"\n            });\n            console.log(\"Cannot find you err..:\", error);\n          }\n        );\n      }\n    }\n  }\n\n  // toggle loading icon\n  toggleSearchCoordinates(currentValue) {\n    this.setState({ isLoadingCoordinates: !currentValue });\n  }\n\n  // convert coordinates to address\n  reverseGeocode(latitude, longitude) {\n    let params = {\n      key: process.env.REACT_APP_GOOGLE_MAPS_JS,\n      latlng: `${latitude},${longitude}`\n    };\n\n    // do google maps js API query\n    return axios\n      .get(\n        `https://maps.googleapis.com/maps/api/geocode/json?key=${\n          params.key\n        }&latlng=${params.latlng}`\n      )\n      .then(response => {\n        // get the result into the form so user has a feedbakc\n        this.setState({\n          addressInputValue: response.data.results[0].formatted_address\n        });\n\n        // TODO method call to add an user marker here\n      });\n    //end\n  }\n\n  // redirect to map when address found\n  goToResult() {\n    this.setState({ toMapResults: true });\n  }\n\n  render() {\n    // form validation to prevent submission if empty\n    // see bootstrap react docs\n    const { validated } = this.state;\n\n    // redirect to map when address found\n    if (this.state.toMapResults === true) {\n      return <Redirect to=\"/map\" />;\n    }\n\n    return (\n      <Form\n        noValidate\n        validated={validated}\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                this.getUserLocationBrowser();\n              }}\n            >\n              <i className=\"fas fa-map-marker-alt\" />\n            </Button>\n          </div>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Où êtes vous?\"\n            name=\"addressInputValue\"\n            value={this.state.addressInputValue}\n            onChange={this.handleChange}\n            id=\"autocomplete\"\n            ref={this.autocompleteInput}\n            required\n          />\n\n          <div className=\"input-group-append\">\n            {this.state.isLoadingCoordinates ? (\n              <Button variant=\"info\" onClick={this.goToResult}>\n                <i className=\"fas fa-circle-notch fa-spin\" />\n              </Button>\n            ) : (\n              <Button type=\"submit\" variant=\"outline-secondary\">\n                <i className=\"fas fa-search\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default LocationSearchInput;\n","import React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport LocationSearchInput from \"./LocationSearchInput.js\";\nimport \"./UserLocalisation.scss\";\n\nclass UserLocalisation extends Component {\n  render() {\n    return (\n      <section className=\"text-center \">\n        <div className=\"bg-directions m-4\" />\n        <p className=\"lead my-4\">Trouvez des soins proches de vous.</p>\n        <Row>\n          <Col\n            sm={{ span: 12 }}\n            className=\" px-5 d-flex justify-content-center\"\n          >\n            <Col className=\"bg-light shadow-sm border rounded p-2 col-md-6 col-xs-12\">\n              <LocationSearchInput\n                onGeolocation={this.props.onGeolocation}\n                nextStep={event => this.props.nextStep(event)}\n              />\n            </Col>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={{ span: 12 }} className=\"d-flex justify-content-center\">\n            {/* prescription checkbox */}\n            <Form className=\"p-2 small w-50 mx-auto text-left\">\n              <div key=\"hint-checkbox\" className=\"hint-checkbox m-2 px-2\">\n                <label>\n                  <Form.Check\n                    type=\"checkbox\"\n                    id=\"prescription\"\n                    className=\"d-inline mr-2\"\n                  />\n                  <span className=\"text-muted\">\n                    C'est pour renouveller une ordonnance ?{\" \"}\n                    <span className=\"text-secondary\">Cliquez ici !</span>\n                  </span>\n                </label>\n              </div>\n            </Form>\n          </Col>\n        </Row>\n      </section>\n    );\n  }\n}\n\nexport default UserLocalisation;\n","import React, { Component } from \"react\";\n\n// content\nimport StepWizard from \"react-step-wizard\";\nimport PathologyQuestions from \"./PathologyQuestions\";\nimport AdultQuestion from \"./AdultQuestion\";\nimport QuestionsIndicator from \"./QuestionsIndicator\";\nimport UserLocalisation from \"./UserLocalisation.js\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // works, hardcoded to refactor later\n      numberOfSteps: 3,\n      currentStep: 0\n    };\n  }\n\n  updateFormIndicator(numberOfSteps, currentStep) {\n    this.setState({\n      numberOfSteps,\n      currentStep\n    });\n  }\n\n  render() {\n    const { numberOfSteps, currentStep } = this.state;\n    return (\n      <>\n        <section className=\"d-flex justify-content-center\">\n          <QuestionsIndicator\n            numberOfSteps={numberOfSteps}\n            currentStep={currentStep}\n          />\n        </section>\n\n        <StepWizard onStepChange={this.handleStep} initialStep={1}>\n          <AdultQuestion\n            // adding anchor to url\n            hashKey={\"age\"}\n            // update user search filters and form step counter\n            updatePatient={event => this.props.updatePatient(event)}\n            onFormStep={(numberOfSteps, currentStep) =>\n              this.updateFormIndicator(numberOfSteps, currentStep)\n            }\n          />\n\n          <PathologyQuestions\n            hashKey={\"service\"}\n            updatePatient={event => this.props.updatePatient(event)}\n            onFormStep={(numberOfSteps, currentStep) =>\n              this.updateFormIndicator(numberOfSteps, currentStep)\n            }\n          />\n\n          <UserLocalisation\n            hashKey={\"position\"}\n            onGeolocation={this.props.onGeolocation}\n          />\n        </StepWizard>\n      </>\n    );\n  }\n}\n\nexport default Questions;\n","import React, { Component } from \"react\";\n\nimport \"./SignUpPage.css\";\nimport { postSignUp } from \"../api.js\";\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    postSignUp(this.state).then(response => {\n      console.log(\"sign up result\", response.data);\n      // use the method sent an a prop by app.js to update current user\n      this.props.signupSuccess(response.data);\n    });\n  }\n  render() {\n    const { currentUser } = this.props;\n\n    return (\n      <section className=\"SignupPage\">\n        {currentUser ? (\n          <div>\n            <h2>You are signed up !</h2>\n          </div>\n        ) : (\n          <div>\n            <h2>Sign Up</h2>\n            <form onSubmit={event => this.handleSubmit(event)}>\n              <label>\n                Email :{\" \"}\n                <input\n                  onChange={event => {\n                    this.genericOnChange(event);\n                  }}\n                  value={this.state.email}\n                  type=\"email\"\n                  name=\"username\"\n                  placeholder=\"Mon Email\"\n                />\n              </label>\n\n              <label>\n                Mot de passe :{\" \"}\n                <input\n                  onChange={event => {\n                    this.genericOnChange(event);\n                  }}\n                  value={this.state.password}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Mot de passe\"\n                />\n              </label>\n\n              <button>M'enregistrer</button>\n            </form>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default SignupPage;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./LoginPage.css\";\nimport { postLogin } from \"../api\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  genericOnChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  handleSubmit(event) {\n    //submit login info to the backend\n    event.preventDefault();\n    postLogin(this.state).then(response => {\n      console.log(\"log in\", response.data);\n      // use the method sent an a prop by app.js to update current user\n      this.props.loginSuccess(response.data);\n    });\n  }\n\n  render() {\n    return this.props.currentUser ? (\n      <Redirect to=\"/form\" />\n    ) : (\n      <section className=\"LoginPage\">\n        <h2>Log In</h2>\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Email:{\" \"}\n            <input\n              onChange={event => this.genericOnChange(event)}\n              value={this.state.email}\n              name=\"username\"\n              type=\"email\"\n              placeholder=\"Mon Email\"\n            />\n          </label>\n\n          <label>\n            Mot de Passe:{\" \"}\n            <input\n              onChange={event => {\n                this.genericOnChange(event);\n              }}\n              value={this.state.password}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Mot de passe\"\n            />\n          </label>\n          <button>Se connecter</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport {geolocated} from 'react-geolocated';\n\nclass Demo extends React.Component {\n  render() {\n    return !this.props.isGeolocationAvailable\n      ? <div>Your browser does not support Geolocation</div>\n      : !this.props.isGeolocationEnabled\n        ? <div>Geolocation is not enabled</div>\n        : this.props.coords\n          ? <table>\n            <tbody>\n              <tr><td>latitude</td><td>{this.props.coords.latitude}</td></tr>\n              <tr><td>longitude</td><td>{this.props.coords.longitude}</td></tr>\n              <tr><td>altitude</td><td>{this.props.coords.altitude}</td></tr>\n              <tr><td>heading</td><td>{this.props.coords.heading}</td></tr>\n              <tr><td>speed</td><td>{this.props.coords.speed}</td></tr>\n            </tbody>\n          </table>\n          : <div>Getting the location data&hellip; </div>;\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Demo);\n","//Main\nimport React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n//Components\nimport Navigation from \"./components/Navigation.js\";\nimport IsEmergency from \"./components/IsEmergency.js\";\nimport MapWrapper from \"./components/MapWrapper.js\";\nimport NotFound from \"./components/NotFound.js\";\n//Styling\nimport \"./App.scss\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Questions from \"./components/Questions.js\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport SignupPage from \"./components/SignUpPage.js\";\nimport LoginPage from \"./components/LoginPage.js\";\nimport GeolocationPoint from \"./components/GeolocationCoodinates.js\";\nimport { getLogout } from \"./api\";\n\nrequire(\"dotenv\").config();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userInfo = localStorage.getItem(\"currentUser\");\n    if (userInfo) {\n      // turns the string back into an object if we are logged in\n      userInfo = JSON.parse(userInfo);\n    }\n    this.state = {\n      currentUser: userInfo,\n\n      patientGender: \"\",\n      neededSpecialist: \"\",\n      patientAdult: \"\",\n      beforeChildren: true,\n      patientLocation: { latitude: 0, longitude: 0 }\n    };\n  }\n\n  updateUser(newUser) {\n    if (newUser) {\n      // save the user info in local storage if we are logging IN\n      // turn it into a json string before we save\n      localStorage.setItem(\"currentUser\", JSON.stringify(newUser));\n    } else {\n      // delete this info when we are loging out\n      localStorage.removeItem(\"currentUser\");\n    }\n    this.setState({ currentUser: newUser });\n  }\n\n  updatePatient(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  updatePatientPosition(latitude, longitude) {\n    this.setState({\n      patientLocation: { latitude, longitude }\n    });\n  }\n\n  logoutClick() {\n    getLogout()\n      .then(response => {\n        // console.log(\"Log Out\", response.data);\n        // set the currentUser state to empty\n        this.updateUser(null);\n      })\n      .catch(err => err);\n  }\n\n  render() {\n    const { neededSpecialist, patientAdult, patientLocation } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <Navigation\n            currentUser={this.state.currentUser}\n            logoutClick={() => this.logoutClick()}\n          />\n        </header>\n\n        <Switch>\n          <Route path=\"/\" exact component={IsEmergency} key=\"isEmergency\" />\n          <Route\n            key=\"3\"\n            path=\"/map\"\n            render={() => {\n              return (\n                <MapWrapper\n                  neededSpecialist={neededSpecialist}\n                  patientType={patientAdult}\n                  userLocation={patientLocation}\n                />\n              );\n            }}\n          />\n          <Route key=\"geoloc\" path=\"/geoloc\" component={GeolocationPoint} />\n          <Route\n            key=\"form\"\n            path=\"/form\"\n            render={() => {\n              return (\n                <Questions\n                  updatePatient={event => this.updatePatient(event)}\n                  onGeolocation={(latitude, longitude) =>\n                    this.updatePatientPosition(latitude, longitude)\n                  }\n                />\n              );\n            }}\n          />\n\n          <Route\n            key=\"signup\"\n            path=\"/signup\"\n            render={() => {\n              return (\n                <SignupPage\n                  currentUser={this.state.currentUser}\n                  signupSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n          <Route\n            key=\"login\"\n            path=\"/login\"\n            render={() => {\n              return (\n                <LoginPage\n                  currentUser={this.state.currentUser}\n                  loginSuccess={user => this.updateUser(user)}\n                />\n              );\n            }}\n          />\n\n          <Route component={NotFound} key=\"NotFound\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}